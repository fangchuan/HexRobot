; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_ts_ft5x06.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_ts_ft5x06.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\User\fonts -I..\..\emWin\GUI_X -I..\..\emWin\Config -I..\..\emWin\Include -I..\..\emWin\emWinTask -I..\..\uCOS-III\uC-CPU -I..\..\uCOS-III\uC-LIB -I..\..\uCOS-III\uCOS-III\Ports -I..\..\uCOS-III\uCOS-III\Source -I..\..\uCOS-III\uC-CPU\ARM-Cortex-M4\RealView -I..\..\uCOS-III\uC-LIB\Ports\ARM-Cortex-M4\RealView -I..\..\uCOS-III\uCOS-III\Ports\ARM-Cortex-M4\Generic\RealView -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\fatfs\src -I..\..\Libraries\CMSIS\Include -I..\..\User\control -I"F:\学习用具\2016毕业设计\V5-610_uCOS-III + emWin + FatFS\Project\MDK-ARM(uV4)\RTE" -I"E:\KEIL MDK5\ARM\PACK\Keil\STM32F4xx_DFP\2.6.0" -I"E:\KEIL MDK5\ARM\CMSIS\Include" -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F407xx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx --omf_browse=.\flash\obj\bsp_ts_ft5x06.crf ..\..\User\bsp_stm32f4xx\src\bsp_ts_ft5x06.c]
                          THUMB

                          AREA ||i.FT5X06_InitHard||, CODE, READONLY, ALIGN=2

                  FT5X06_InitHard PROC
;;;42     */
;;;43     void FT5X06_InitHard(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;44     {	
;;;45     	/* 配置触摸笔中断引脚为输入 */
;;;46     	{
;;;47     		GPIO_InitTypeDef GPIO_InitStructure;
;;;48     
;;;49     		/* 第1步：打开GPIO时钟 */
;;;50     		RCC_AHB1PeriphClockCmd(RCC_TP_INT, ENABLE);
000002  2101              MOVS     r1,#1
000004  0208              LSLS     r0,r1,#8
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;51     
;;;52     		/* 第2步：配置所有的按键GPIO为浮动输入模式(实际上CPU复位后就是输入状态) */
;;;53     		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;		/* 设为输入口 */
00000a  2000              MOVS     r0,#0
00000c  f88d0004          STRB     r0,[sp,#4]
;;;54     		GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;		/* 设为推挽模式 */
000010  f88d0006          STRB     r0,[sp,#6]
;;;55     		GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;	/* 无需上下拉电阻 */
000014  f88d0007          STRB     r0,[sp,#7]
;;;56     		GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;	/* IO口最大速度 */
000018  2002              MOVS     r0,#2
00001a  f88d0005          STRB     r0,[sp,#5]
;;;57     
;;;58     		GPIO_InitStructure.GPIO_Pin = PIN_TP_INT;
00001e  2008              MOVS     r0,#8
000020  9000              STR      r0,[sp,#0]
;;;59     		GPIO_Init(PORT_TP_INT, &GPIO_InitStructure);		
000022  4669              MOV      r1,sp
000024  4804              LDR      r0,|L1.56|
000026  f7fffffe          BL       GPIO_Init
;;;60     	}
;;;61     	
;;;62     #if 0	/* 打印全部的寄存器数据 for debug */
;;;63     	{
;;;64     		uint8_t i;
;;;65     		uint8_t reg_value;
;;;66     		
;;;67     		printf_dbg("[FTS] Touch Chip\r\n");
;;;68     		
;;;69     		bsp_DelayMS(10);
;;;70     		
;;;71     		for (i = 0; i < 255; i++)
;;;72     		{
;;;73     			FT5X06_ReadReg(i, &reg_value, 1);
;;;74     			printf_dbg(" 0x%02X = 0x%02X\r\n", i, reg_value);
;;;75     		}
;;;76     	}
;;;77     #endif	
;;;78     	
;;;79     #if 0
;;;80     	{
;;;81     		uint8_t reg_addr;
;;;82     		uint8_t reg_value;
;;;83     		
;;;84     		//get some register information
;;;85     		reg_addr = FT5X06_REG_FW_VER;
;;;86     		FT5X06_ReadReg(reg_addr, &reg_value, 1);
;;;87     		printf_dbg("[FTS] Firmware version = 0x%x\r\n", reg_value);
;;;88     		
;;;89     		reg_addr = FT5X06_REG_POINT_RATE;
;;;90     		FT5X06_ReadReg(reg_addr, &reg_value, 1);
;;;91     		printf_dbg("[FTS] report rate is %dHz.\r\n", reg_value * 10);
;;;92     		
;;;93     		reg_addr = FT5X06_REG_THGROUP;
;;;94     		FT5X06_ReadReg(reg_addr, &reg_value, 1);
;;;95     		printf_dbg("[FTS] touch threshold is %d.\r\n", reg_value * 4);
;;;96     	}
;;;97     #endif	
;;;98     	
;;;99     	g_tFT5X06.TimerCount = 0;
00002a  2000              MOVS     r0,#0
00002c  4903              LDR      r1,|L1.60|
00002e  7088              STRB     r0,[r1,#2]
;;;100    	g_tFT5X06.Enable = 1;
000030  2001              MOVS     r0,#1
000032  7048              STRB     r0,[r1,#1]
;;;101    }
000034  bd1c              POP      {r2-r4,pc}
;;;102    
                          ENDP

000036  0000              DCW      0x0000
                  |L1.56|
                          DCD      0x40022000
                  |L1.60|
                          DCD      g_tFT5X06

                          AREA ||i.FT5X06_OnePiontScan||, CODE, READONLY, ALIGN=2

                  FT5X06_OnePiontScan PROC
;;;185    extern GUI_PID_STATE State;
;;;186    void FT5X06_OnePiontScan(void)
000000  b5fe              PUSH     {r1-r7,lr}
;;;187    {
;;;188    	uint8_t buf[CFG_POINT_READ_BUF];
;;;189    	uint8_t i;
;;;190    	static uint8_t s_tp_down = 0;
;;;191    	uint16_t x, y;
;;;192    
;;;193    	if (g_tFT5X06.Enable == 0)
000002  4860              LDR      r0,|L2.388|
000004  7840              LDRB     r0,[r0,#1]  ; g_tFT5X06
000006  b900              CBNZ     r0,|L2.10|
                  |L2.8|
;;;194    	{
;;;195    		return;
;;;196    	}
;;;197    	
;;;198    	if (FT5X06_PenInt() == 0)
;;;199    	{
;;;200    		return;
;;;201    	}
;;;202    	
;;;203    	FT5X06_ReadReg(2, buf, 1);	
;;;204        /* 判断是否有触摸数据 */	
;;;205    	if ((buf[0] & 0x07) == 0)
;;;206    	{
;;;207    		if (s_tp_down == 1)
;;;208    		{
;;;209    			/* State.x和State.y的数值无需更新，State是全局变量，保存的就是最近一次的数值 */
;;;210    			s_tp_down = 0;
;;;211    			State.Pressed = 0;
;;;212    			GUI_PID_StoreState(&State);	/* 释放 */
;;;213    		}
;;;214    		return;
;;;215    	}
;;;216    	
;;;217    	/* 有触摸，读取完整的数据，这里读取了一次 */
;;;218    	FT5X06_ReadReg(0, buf, CFG_POINT_READ_BUF);
;;;219    	for (i = 0; i < FT5X06_TOUCH_POINTS; i++)
;;;220    	{
;;;221    		uint8_t pointid;
;;;222    		
;;;223    		pointid = (buf[5 + 6*i]) >> 4;
;;;224    		if (pointid >= 0x0f)
;;;225    		{
;;;226    			break;
;;;227    		}
;;;228    		else
;;;229    		{
;;;230            	g_tFT5X06.X[i] = (int16_t)(buf[3 + 6*i] & 0x0F)<<8 | (int16_t)buf[4 + 6*i];
;;;231            	g_tFT5X06.Y[i] = (int16_t)(buf[5 + 6*i] & 0x0F)<<8 | (int16_t)buf[6 + 6*i];
;;;232            	g_tFT5X06.Event[i] = buf[0x3 + 6*i] >> 6;
;;;233            	g_tFT5X06.id[i] = (buf[5 + 6*i])>>4;
;;;234        	}
;;;235        }
;;;236    
;;;237    	/* 检测按下 */
;;;238    	{
;;;239    		if ((g_tFT5X06.ChipID == 0x55)||(g_tFT5X06.ChipID == 0xa3))       /* 4.3寸 480 * 272 */
;;;240    		{
;;;241    			x = g_tFT5X06.Y[0];
;;;242    			y = g_tFT5X06.X[0];	
;;;243    			
;;;244    			/* 判断值域 */
;;;245    			if (x > 479)
;;;246    			{
;;;247    				x = 479;
;;;248    			}
;;;249    			
;;;250    			if (y > 271)
;;;251    			{
;;;252    				y = 271;
;;;253    			}			
;;;254    		}
;;;255    		else if (g_tFT5X06.ChipID == 0x0A)	/* 5.0寸 800 * 480 */
;;;256    		{
;;;257    			x = g_tFT5X06.X[0];
;;;258    			y = g_tFT5X06.Y[0];	
;;;259    			
;;;260    			/* 判断值域 */
;;;261    			if (x > 799)
;;;262    			{
;;;263    				x = 799;
;;;264    			}			
;;;265    			if (y > 479)
;;;266    			{
;;;267    				y = 479;
;;;268    			}			
;;;269    		}
;;;270    		else	/* id == 0x06 表示7寸电容屏（FT芯片） */
;;;271    		{
;;;272    			x = g_tFT5X06.X[0];
;;;273    			y = g_tFT5X06.Y[0];	
;;;274    			
;;;275    			/* 判断值域 */
;;;276    			if (x > 799)
;;;277    			{
;;;278    				x = 799;
;;;279    			}			
;;;280    			if (y > 479)
;;;281    			{
;;;282    				y = 479;
;;;283    			}			
;;;284    		}
;;;285    	}
;;;286    	
;;;287    	if (s_tp_down == 0)
;;;288    	{
;;;289    		s_tp_down = 1;
;;;290    		State.x = x;
;;;291    		State.y = y;
;;;292    		State.Pressed = 1;
;;;293    		GUI_PID_StoreState(&State);	
;;;294    	}
;;;295    	else
;;;296    	{
;;;297    		State.x = x;
;;;298    		State.y = y;
;;;299    		State.Pressed = 1;
;;;300    		GUI_PID_StoreState(&State);	
;;;301    	}
;;;302    
;;;303    #if 0
;;;304    	for (i = 0; i < CFG_POINT_READ_BUF; i++)
;;;305    	{
;;;306    		printf("%02X ", buf[i]);
;;;307    	}
;;;308    	printf("\r\n");
;;;309    #endif
;;;310    
;;;311    #if 0  /* 打印5个坐标点数据 */	
;;;312    	printf("(%5d,%5d,%3d,%3d) ",  g_tFT5X06.X[0], g_tFT5X06.Y[0], g_tFT5X06.Event[0],  g_tFT5X06.id[0]);
;;;313    	printf("(%5d,%5d,%3d,%3d) ",  g_tFT5X06.X[1], g_tFT5X06.Y[1], g_tFT5X06.Event[1],  g_tFT5X06.id[1]);
;;;314    	printf("(%5d,%5d,%3d,%3d) ",  g_tFT5X06.X[2], g_tFT5X06.Y[2], g_tFT5X06.Event[2],  g_tFT5X06.id[2]);
;;;315    	printf("(%5d,%5d,%3d,%3d) ",  g_tFT5X06.X[3], g_tFT5X06.Y[3], g_tFT5X06.Event[3],  g_tFT5X06.id[3]);
;;;316    	printf("(%5d,%5d,%3d,%3d) ",  g_tFT5X06.X[4], g_tFT5X06.Y[4], g_tFT5X06.Event[4],  g_tFT5X06.id[4]);
;;;317    	printf("\r\n");
;;;318    #endif	
;;;319    }
000008  bdfe              POP      {r1-r7,pc}
                  |L2.10|
00000a  f7fffffe          BL       FT5X06_PenInt
00000e  b900              CBNZ     r0,|L2.18|
000010  e7fa              B        |L2.8|
                  |L2.18|
000012  2201              MOVS     r2,#1                 ;203
000014  4669              MOV      r1,sp                 ;203
000016  2002              MOVS     r0,#2                 ;203
000018  f7fffffe          BL       FT5X06_ReadReg
00001c  f89d0000          LDRB     r0,[sp,#0]            ;205
000020  f0000007          AND      r0,r0,#7              ;205
000024  b960              CBNZ     r0,|L2.64|
000026  4858              LDR      r0,|L2.392|
000028  7800              LDRB     r0,[r0,#0]            ;207  ; s_tp_down
00002a  2801              CMP      r0,#1                 ;207
00002c  d107              BNE      |L2.62|
00002e  2000              MOVS     r0,#0                 ;210
000030  4955              LDR      r1,|L2.392|
000032  7008              STRB     r0,[r1,#0]            ;210
000034  4955              LDR      r1,|L2.396|
000036  7208              STRB     r0,[r1,#8]            ;211
000038  4608              MOV      r0,r1                 ;212
00003a  f7fffffe          BL       GUI_PID_StoreState
                  |L2.62|
00003e  e7e3              B        |L2.8|
                  |L2.64|
000040  2209              MOVS     r2,#9                 ;218
000042  4669              MOV      r1,sp                 ;218
000044  2000              MOVS     r0,#0                 ;218
000046  f7fffffe          BL       FT5X06_ReadReg
00004a  2400              MOVS     r4,#0                 ;219
00004c  e047              B        |L2.222|
                  |L2.78|
00004e  eb040144          ADD      r1,r4,r4,LSL #1       ;223
000052  0049              LSLS     r1,r1,#1              ;223
000054  1d49              ADDS     r1,r1,#5              ;223
000056  f81d1001          LDRB     r1,[sp,r1]            ;223
00005a  1108              ASRS     r0,r1,#4              ;223
00005c  280f              CMP      r0,#0xf               ;224
00005e  db00              BLT      |L2.98|
000060  e03f              B        |L2.226|
                  |L2.98|
000062  eb040144          ADD      r1,r4,r4,LSL #1       ;230
000066  0049              LSLS     r1,r1,#1              ;230
000068  1d09              ADDS     r1,r1,#4              ;230
00006a  f81d2001          LDRB     r2,[sp,r1]            ;230
00006e  eb040144          ADD      r1,r4,r4,LSL #1       ;230
000072  0049              LSLS     r1,r1,#1              ;230
000074  1cc9              ADDS     r1,r1,#3              ;230
000076  f81d1001          LDRB     r1,[sp,r1]            ;230
00007a  f001010f          AND      r1,r1,#0xf            ;230
00007e  ea422101          ORR      r1,r2,r1,LSL #8       ;230
000082  4a40              LDR      r2,|L2.388|
000084  1d12              ADDS     r2,r2,#4              ;230
000086  f8221014          STRH     r1,[r2,r4,LSL #1]     ;230
00008a  eb040144          ADD      r1,r4,r4,LSL #1       ;231
00008e  0049              LSLS     r1,r1,#1              ;231
000090  1d89              ADDS     r1,r1,#6              ;231
000092  f81d2001          LDRB     r2,[sp,r1]            ;231
000096  eb040144          ADD      r1,r4,r4,LSL #1       ;231
00009a  0049              LSLS     r1,r1,#1              ;231
00009c  1d49              ADDS     r1,r1,#5              ;231
00009e  f81d1001          LDRB     r1,[sp,r1]            ;231
0000a2  f001010f          AND      r1,r1,#0xf            ;231
0000a6  ea422101          ORR      r1,r2,r1,LSL #8       ;231
0000aa  4a36              LDR      r2,|L2.388|
0000ac  1d92              ADDS     r2,r2,#6              ;231
0000ae  f8221014          STRH     r1,[r2,r4,LSL #1]     ;231
0000b2  eb040144          ADD      r1,r4,r4,LSL #1       ;232
0000b6  0049              LSLS     r1,r1,#1              ;232
0000b8  1cc9              ADDS     r1,r1,#3              ;232
0000ba  f81d1001          LDRB     r1,[sp,r1]            ;232
0000be  118a              ASRS     r2,r1,#6              ;232
0000c0  4930              LDR      r1,|L2.388|
0000c2  3109              ADDS     r1,r1,#9              ;232
0000c4  550a              STRB     r2,[r1,r4]            ;232
0000c6  eb040144          ADD      r1,r4,r4,LSL #1       ;233
0000ca  0049              LSLS     r1,r1,#1              ;233
0000cc  1d49              ADDS     r1,r1,#5              ;233
0000ce  f81d1001          LDRB     r1,[sp,r1]            ;233
0000d2  110a              ASRS     r2,r1,#4              ;233
0000d4  492b              LDR      r1,|L2.388|
0000d6  3108              ADDS     r1,r1,#8              ;233
0000d8  550a              STRB     r2,[r1,r4]            ;233
0000da  1c60              ADDS     r0,r4,#1              ;219
0000dc  b2c4              UXTB     r4,r0                 ;219
                  |L2.222|
0000de  2c01              CMP      r4,#1                 ;219
0000e0  dbb5              BLT      |L2.78|
                  |L2.226|
0000e2  bf00              NOP                            ;226
0000e4  4827              LDR      r0,|L2.388|
0000e6  7800              LDRB     r0,[r0,#0]            ;239  ; g_tFT5X06
0000e8  2855              CMP      r0,#0x55              ;239
0000ea  d003              BEQ      |L2.244|
0000ec  4825              LDR      r0,|L2.388|
0000ee  7800              LDRB     r0,[r0,#0]            ;239  ; g_tFT5X06
0000f0  28a3              CMP      r0,#0xa3              ;239
0000f2  d10d              BNE      |L2.272|
                  |L2.244|
0000f4  4823              LDR      r0,|L2.388|
0000f6  88c5              LDRH     r5,[r0,#6]            ;241  ; g_tFT5X06
0000f8  8886              LDRH     r6,[r0,#4]            ;242  ; g_tFT5X06
0000fa  f5b57ff0          CMP      r5,#0x1e0             ;245
0000fe  db01              BLT      |L2.260|
000100  f24015df          MOV      r5,#0x1df             ;247
                  |L2.260|
000104  f5b67f88          CMP      r6,#0x110             ;250
000108  db21              BLT      |L2.334|
00010a  f240160f          MOV      r6,#0x10f             ;252
00010e  e01e              B        |L2.334|
                  |L2.272|
000110  481c              LDR      r0,|L2.388|
000112  7800              LDRB     r0,[r0,#0]            ;255  ; g_tFT5X06
000114  280a              CMP      r0,#0xa               ;255
000116  d10d              BNE      |L2.308|
000118  481a              LDR      r0,|L2.388|
00011a  8885              LDRH     r5,[r0,#4]            ;257  ; g_tFT5X06
00011c  88c6              LDRH     r6,[r0,#6]            ;258  ; g_tFT5X06
00011e  f5b57f48          CMP      r5,#0x320             ;261
000122  db01              BLT      |L2.296|
000124  f240351f          MOV      r5,#0x31f             ;263
                  |L2.296|
000128  f5b67ff0          CMP      r6,#0x1e0             ;265
00012c  db0f              BLT      |L2.334|
00012e  f24016df          MOV      r6,#0x1df             ;267
000132  e00c              B        |L2.334|
                  |L2.308|
000134  4813              LDR      r0,|L2.388|
000136  8885              LDRH     r5,[r0,#4]            ;272  ; g_tFT5X06
000138  88c6              LDRH     r6,[r0,#6]            ;273  ; g_tFT5X06
00013a  f5b57f48          CMP      r5,#0x320             ;276
00013e  db01              BLT      |L2.324|
000140  f240351f          MOV      r5,#0x31f             ;278
                  |L2.324|
000144  f5b67ff0          CMP      r6,#0x1e0             ;280
000148  db01              BLT      |L2.334|
00014a  f24016df          MOV      r6,#0x1df             ;282
                  |L2.334|
00014e  480e              LDR      r0,|L2.392|
000150  7800              LDRB     r0,[r0,#0]            ;287  ; s_tp_down
000152  b960              CBNZ     r0,|L2.366|
000154  2001              MOVS     r0,#1                 ;289
000156  490c              LDR      r1,|L2.392|
000158  7008              STRB     r0,[r1,#0]            ;289
00015a  480c              LDR      r0,|L2.396|
00015c  6005              STR      r5,[r0,#0]            ;290  ; State
00015e  6046              STR      r6,[r0,#4]            ;291  ; State
000160  2001              MOVS     r0,#1                 ;292
000162  490a              LDR      r1,|L2.396|
000164  7208              STRB     r0,[r1,#8]            ;292
000166  4608              MOV      r0,r1                 ;293
000168  f7fffffe          BL       GUI_PID_StoreState
00016c  e008              B        |L2.384|
                  |L2.366|
00016e  4807              LDR      r0,|L2.396|
000170  6005              STR      r5,[r0,#0]            ;297  ; State
000172  6046              STR      r6,[r0,#4]            ;298  ; State
000174  2001              MOVS     r0,#1                 ;299
000176  4905              LDR      r1,|L2.396|
000178  7208              STRB     r0,[r1,#8]            ;299
00017a  4608              MOV      r0,r1                 ;300
00017c  f7fffffe          BL       GUI_PID_StoreState
                  |L2.384|
000180  bf00              NOP      
000182  e741              B        |L2.8|
;;;320    
                          ENDP

                  |L2.388|
                          DCD      g_tFT5X06
                  |L2.392|
                          DCD      s_tp_down
                  |L2.396|
                          DCD      State

                          AREA ||i.FT5X06_PenInt||, CODE, READONLY, ALIGN=2

                  FT5X06_PenInt PROC
;;;110    */
;;;111    uint8_t FT5X06_PenInt(void)
000000  4804              LDR      r0,|L3.20|
;;;112    {
;;;113    	if ((PORT_TP_INT->IDR & PIN_TP_INT) == 0)
000002  6900              LDR      r0,[r0,#0x10]
000004  f0000008          AND      r0,r0,#8
000008  b908              CBNZ     r0,|L3.14|
;;;114    	{
;;;115    		return 1;
00000a  2001              MOVS     r0,#1
                  |L3.12|
;;;116    	}
;;;117    	return 0;
;;;118    }
00000c  4770              BX       lr
                  |L3.14|
00000e  2000              MOVS     r0,#0                 ;117
000010  e7fc              B        |L3.12|
;;;119    
                          ENDP

000012  0000              DCW      0x0000
                  |L3.20|
                          DCD      0x40022000

                          AREA ||i.FT5X06_ReadID||, CODE, READONLY, ALIGN=2

                  FT5X06_ReadID PROC
;;;484    */
;;;485    uint8_t FT5X06_ReadID(void)
000000  b508              PUSH     {r3,lr}
;;;486    {
;;;487    	uint8_t id;
;;;488    	
;;;489    	FT5X06_ReadReg(FTS_REG_CHIP_ID, &id, 1);
000002  2201              MOVS     r2,#1
000004  4669              MOV      r1,sp
000006  20a3              MOVS     r0,#0xa3
000008  f7fffffe          BL       FT5X06_ReadReg
;;;490    	g_tFT5X06.ChipID = id;		/* 保存id */
00000c  f89d0000          LDRB     r0,[sp,#0]
000010  4902              LDR      r1,|L4.28|
000012  7008              STRB     r0,[r1,#0]
;;;491    	return id;
000014  f89d0000          LDRB     r0,[sp,#0]
;;;492    }
000018  bd08              POP      {r3,pc}
;;;493    
                          ENDP

00001a  0000              DCW      0x0000
                  |L4.28|
                          DCD      g_tFT5X06

                          AREA ||i.FT5X06_ReadReg||, CODE, READONLY, ALIGN=1

                  FT5X06_ReadReg PROC
;;;129    */
;;;130    static void FT5X06_ReadReg(uint16_t _usRegAddr, uint8_t *_pRegBuf, uint8_t _ucLen)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;131    {
000004  4606              MOV      r6,r0
000006  460d              MOV      r5,r1
000008  4617              MOV      r7,r2
;;;132    	uint8_t i;
;;;133    
;;;134        i2c_Start();					/* 总线开始信号 */
00000a  f7fffffe          BL       i2c_Start
;;;135    
;;;136        i2c_SendByte(FT5X06_I2C_ADDR);	/* 发送设备地址+写信号 */
00000e  2070              MOVS     r0,#0x70
000010  f7fffffe          BL       i2c_SendByte
;;;137    	i2c_WaitAck();
000014  f7fffffe          BL       i2c_WaitAck
;;;138    
;;;139        //i2c_SendByte(_usRegAddr >> 8);	/* 地址高8位 */
;;;140    	//i2c_WaitAck();
;;;141    
;;;142        i2c_SendByte(_usRegAddr);		/* 地址低8位 */
000018  b2f0              UXTB     r0,r6
00001a  f7fffffe          BL       i2c_SendByte
;;;143    	i2c_WaitAck();
00001e  f7fffffe          BL       i2c_WaitAck
;;;144    
;;;145    	i2c_Start();
000022  f7fffffe          BL       i2c_Start
;;;146        i2c_SendByte(FT5X06_I2C_ADDR + 0x01);	/* 发送设备地址+读信号 */
000026  2071              MOVS     r0,#0x71
000028  f7fffffe          BL       i2c_SendByte
;;;147    	i2c_WaitAck();
00002c  f7fffffe          BL       i2c_WaitAck
;;;148    
;;;149    	for (i = 0; i < _ucLen - 1; i++)
000030  2400              MOVS     r4,#0
000032  e006              B        |L5.66|
                  |L5.52|
;;;150    	{
;;;151    	    _pRegBuf[i] = i2c_ReadByte();	/* 读寄存器数据 */
000034  f7fffffe          BL       i2c_ReadByte
000038  5528              STRB     r0,[r5,r4]
;;;152    		i2c_Ack();
00003a  f7fffffe          BL       i2c_Ack
00003e  1c60              ADDS     r0,r4,#1              ;149
000040  b2c4              UXTB     r4,r0                 ;149
                  |L5.66|
000042  1e78              SUBS     r0,r7,#1              ;149
000044  42a0              CMP      r0,r4                 ;149
000046  dcf5              BGT      |L5.52|
;;;153    	}
;;;154    
;;;155    	/* 最后一个数据 */
;;;156    	 _pRegBuf[i] = i2c_ReadByte();		/* 读寄存器数据 */
000048  f7fffffe          BL       i2c_ReadByte
00004c  5528              STRB     r0,[r5,r4]
;;;157    	i2c_NAck();
00004e  f7fffffe          BL       i2c_NAck
;;;158    
;;;159        i2c_Stop();							/* 总线停止信号 */
000052  f7fffffe          BL       i2c_Stop
;;;160    }
000056  e8bd81f0          POP      {r4-r8,pc}
;;;161    
                          ENDP


                          AREA ||i.FT5X06_Scan||, CODE, READONLY, ALIGN=2

                  FT5X06_Scan PROC
;;;328    */
;;;329    void FT5X06_Scan(void)
000000  b5fe              PUSH     {r1-r7,lr}
;;;330    {
;;;331    	uint8_t buf[CFG_POINT_READ_BUF];
;;;332    	uint8_t i;
;;;333    	static uint8_t s_tp_down = 0;
;;;334    	uint16_t x, y;
;;;335    	static uint16_t x_save, y_save;
;;;336    
;;;337    	if (g_tFT5X06.Enable == 0)
000002  486b              LDR      r0,|L6.432|
000004  7840              LDRB     r0,[r0,#1]  ; g_tFT5X06
000006  b900              CBNZ     r0,|L6.10|
                  |L6.8|
;;;338    	{
;;;339    		return;
;;;340    	}
;;;341    	
;;;342    	/* 10ms 执行一次 */
;;;343    	if (g_tFT5X06.TimerCount < 10)
;;;344    	{
;;;345    		return;
;;;346    	}
;;;347    
;;;348    	g_tFT5X06.TimerCount = 0;
;;;349    	
;;;350    	if (FT5X06_PenInt() == 0)
;;;351    	{
;;;352    		return;
;;;353    	}
;;;354    	
;;;355    	FT5X06_ReadReg(2, buf, 1);		
;;;356    	if ((buf[0] & 0x07) == 0)
;;;357    	{
;;;358    		if (s_tp_down == 1)
;;;359    		{
;;;360    			s_tp_down = 0;
;;;361    			TOUCH_PutKey(TOUCH_RELEASE, x_save, y_save);	/* 释放 */
;;;362    		}
;;;363    		return;
;;;364    	}
;;;365    	
;;;366    	/* 有触摸，读取完整的数据 */
;;;367    	FT5X06_ReadReg(0, buf, CFG_POINT_READ_BUF);
;;;368    	
;;;369    	g_tFT5X06.Count = buf[2] & 0x07; 
;;;370    	if (g_tFT5X06.Count > FT5X06_TOUCH_POINTS)
;;;371    	{
;;;372        	g_tFT5X06.Count = FT5X06_TOUCH_POINTS;
;;;373    	}
;;;374    	
;;;375    	g_tFT5X06.Count = 0;
;;;376    	for (i = 0; i < FT5X06_TOUCH_POINTS; i++)
;;;377    	{
;;;378    		uint8_t pointid;
;;;379    		
;;;380    		pointid = (buf[5 + 6*i]) >> 4;
;;;381    		if (pointid >= 0x0f)
;;;382    		{
;;;383    			break;
;;;384    		}
;;;385    		else
;;;386    		{
;;;387    			g_tFT5X06.Count++;
;;;388            	g_tFT5X06.X[i] = (int16_t)(buf[3 + 6*i] & 0x0F)<<8 | (int16_t)buf[4 + 6*i];
;;;389            	g_tFT5X06.Y[i] = (int16_t)(buf[5 + 6*i] & 0x0F)<<8 | (int16_t)buf[6 + 6*i];
;;;390            	g_tFT5X06.Event[i] = buf[0x3 + 6*i] >> 6;
;;;391            	g_tFT5X06.id[i] = (buf[5 + 6*i])>>4;
;;;392        	}
;;;393        }
;;;394    
;;;395    	/* 检测按下 */
;;;396    	{
;;;397    		if (g_tFT5X06.ChipID == 0x55)       /* 4.3寸 480 * 272 */
;;;398    		{
;;;399    			x = g_tFT5X06.Y[0];
;;;400    			y = g_tFT5X06.X[0];	
;;;401    			
;;;402    			/* 判断值域 */
;;;403    			if (x > 479)
;;;404    			{
;;;405    				x = 479;
;;;406    			}
;;;407    			
;;;408    			if (y > 271)
;;;409    			{
;;;410    				y = 271;
;;;411    			}			
;;;412    		}
;;;413    		else if (g_tFT5X06.ChipID == 0x0A)	/* 5.0寸 800 * 480 */
;;;414    		{
;;;415    			x = g_tFT5X06.X[0];
;;;416    			y = g_tFT5X06.Y[0];	
;;;417    			
;;;418    			/* 判断值域 */
;;;419    			if (x > 799)
;;;420    			{
;;;421    				x = 799;
;;;422    			}			
;;;423    			if (y > 479)
;;;424    			{
;;;425    				y = 479;
;;;426    			}			
;;;427    		}
;;;428    		else	/* id == 0x06 表示7寸电容屏（FT芯片） */
;;;429    		{
;;;430    			x = g_tFT5X06.X[0];
;;;431    			y = g_tFT5X06.Y[0];	
;;;432    			
;;;433    			/* 判断值域 */
;;;434    			if (x > 799)
;;;435    			{
;;;436    				x = 799;
;;;437    			}			
;;;438    			if (y > 479)
;;;439    			{
;;;440    				y = 479;
;;;441    			}			
;;;442    		}
;;;443    	}
;;;444    	
;;;445    	if (s_tp_down == 0)
;;;446    	{
;;;447    		s_tp_down = 1;
;;;448    		
;;;449    		TOUCH_PutKey(TOUCH_DOWN, x, y);
;;;450    	}
;;;451    	else
;;;452    	{
;;;453    		TOUCH_PutKey(TOUCH_MOVE, x, y);
;;;454    	}
;;;455    	x_save = x;	/* 保存坐标，用于释放事件 */
;;;456    	y_save = y;
;;;457    
;;;458    #if 0
;;;459    	for (i = 0; i < CFG_POINT_READ_BUF; i++)
;;;460    	{
;;;461    		printf("%02X ", buf[i]);
;;;462    	}
;;;463    	printf("\r\n");
;;;464    #endif
;;;465    
;;;466    #if 0  /* 打印5个坐标点数据 */	
;;;467    	printf("(%5d,%5d,%3d,%3d) ",  g_tFT5X06.X[0], g_tFT5X06.Y[0], g_tFT5X06.Event[0],  g_tFT5X06.id[0]);
;;;468    	printf("(%5d,%5d,%3d,%3d) ",  g_tFT5X06.X[1], g_tFT5X06.Y[1], g_tFT5X06.Event[1],  g_tFT5X06.id[1]);
;;;469    	printf("(%5d,%5d,%3d,%3d) ",  g_tFT5X06.X[2], g_tFT5X06.Y[2], g_tFT5X06.Event[2],  g_tFT5X06.id[2]);
;;;470    	printf("(%5d,%5d,%3d,%3d) ",  g_tFT5X06.X[3], g_tFT5X06.Y[3], g_tFT5X06.Event[3],  g_tFT5X06.id[3]);
;;;471    	printf("(%5d,%5d,%3d,%3d) ",  g_tFT5X06.X[4], g_tFT5X06.Y[4], g_tFT5X06.Event[4],  g_tFT5X06.id[4]);
;;;472    	printf("\r\n");
;;;473    #endif	
;;;474    }
000008  bdfe              POP      {r1-r7,pc}
                  |L6.10|
00000a  4869              LDR      r0,|L6.432|
00000c  7880              LDRB     r0,[r0,#2]            ;343  ; g_tFT5X06
00000e  280a              CMP      r0,#0xa               ;343
000010  da00              BGE      |L6.20|
000012  e7f9              B        |L6.8|
                  |L6.20|
000014  2000              MOVS     r0,#0                 ;348
000016  4966              LDR      r1,|L6.432|
000018  7088              STRB     r0,[r1,#2]            ;348
00001a  f7fffffe          BL       FT5X06_PenInt
00001e  b900              CBNZ     r0,|L6.34|
000020  e7f2              B        |L6.8|
                  |L6.34|
000022  2201              MOVS     r2,#1                 ;355
000024  4669              MOV      r1,sp                 ;355
000026  2002              MOVS     r0,#2                 ;355
000028  f7fffffe          BL       FT5X06_ReadReg
00002c  f89d0000          LDRB     r0,[sp,#0]            ;356
000030  f0000007          AND      r0,r0,#7              ;356
000034  b970              CBNZ     r0,|L6.84|
000036  485f              LDR      r0,|L6.436|
000038  7800              LDRB     r0,[r0,#0]            ;358  ; s_tp_down
00003a  2801              CMP      r0,#1                 ;358
00003c  d109              BNE      |L6.82|
00003e  2000              MOVS     r0,#0                 ;360
000040  495c              LDR      r1,|L6.436|
000042  7008              STRB     r0,[r1,#0]            ;360
000044  485c              LDR      r0,|L6.440|
000046  8802              LDRH     r2,[r0,#0]            ;361  ; y_save
000048  485c              LDR      r0,|L6.444|
00004a  8801              LDRH     r1,[r0,#0]            ;361  ; x_save
00004c  2003              MOVS     r0,#3                 ;361
00004e  f7fffffe          BL       TOUCH_PutKey
                  |L6.82|
000052  e7d9              B        |L6.8|
                  |L6.84|
000054  2209              MOVS     r2,#9                 ;367
000056  4669              MOV      r1,sp                 ;367
000058  2000              MOVS     r0,#0                 ;367
00005a  f7fffffe          BL       FT5X06_ReadReg
00005e  f89d0002          LDRB     r0,[sp,#2]            ;369
000062  f0000007          AND      r0,r0,#7              ;369
000066  4952              LDR      r1,|L6.432|
000068  70c8              STRB     r0,[r1,#3]            ;369
00006a  4608              MOV      r0,r1                 ;370
00006c  78c0              LDRB     r0,[r0,#3]            ;370  ; g_tFT5X06
00006e  2801              CMP      r0,#1                 ;370
000070  dd01              BLE      |L6.118|
000072  2001              MOVS     r0,#1                 ;372
000074  70c8              STRB     r0,[r1,#3]            ;372
                  |L6.118|
000076  2000              MOVS     r0,#0                 ;375
000078  494d              LDR      r1,|L6.432|
00007a  70c8              STRB     r0,[r1,#3]            ;375
00007c  2400              MOVS     r4,#0                 ;376
00007e  e04c              B        |L6.282|
                  |L6.128|
000080  eb040144          ADD      r1,r4,r4,LSL #1       ;380
000084  0049              LSLS     r1,r1,#1              ;380
000086  1d49              ADDS     r1,r1,#5              ;380
000088  f81d1001          LDRB     r1,[sp,r1]            ;380
00008c  1108              ASRS     r0,r1,#4              ;380
00008e  280f              CMP      r0,#0xf               ;381
000090  db00              BLT      |L6.148|
000092  e044              B        |L6.286|
                  |L6.148|
000094  4946              LDR      r1,|L6.432|
000096  78c9              LDRB     r1,[r1,#3]            ;387  ; g_tFT5X06
000098  1c49              ADDS     r1,r1,#1              ;387
00009a  4a45              LDR      r2,|L6.432|
00009c  70d1              STRB     r1,[r2,#3]            ;387
00009e  eb040144          ADD      r1,r4,r4,LSL #1       ;388
0000a2  0049              LSLS     r1,r1,#1              ;388
0000a4  1d09              ADDS     r1,r1,#4              ;388
0000a6  f81d2001          LDRB     r2,[sp,r1]            ;388
0000aa  eb040144          ADD      r1,r4,r4,LSL #1       ;388
0000ae  0049              LSLS     r1,r1,#1              ;388
0000b0  1cc9              ADDS     r1,r1,#3              ;388
0000b2  f81d1001          LDRB     r1,[sp,r1]            ;388
0000b6  f001010f          AND      r1,r1,#0xf            ;388
0000ba  ea422101          ORR      r1,r2,r1,LSL #8       ;388
0000be  4a3c              LDR      r2,|L6.432|
0000c0  1d12              ADDS     r2,r2,#4              ;388
0000c2  f8221014          STRH     r1,[r2,r4,LSL #1]     ;388
0000c6  eb040144          ADD      r1,r4,r4,LSL #1       ;389
0000ca  0049              LSLS     r1,r1,#1              ;389
0000cc  1d89              ADDS     r1,r1,#6              ;389
0000ce  f81d2001          LDRB     r2,[sp,r1]            ;389
0000d2  eb040144          ADD      r1,r4,r4,LSL #1       ;389
0000d6  0049              LSLS     r1,r1,#1              ;389
0000d8  1d49              ADDS     r1,r1,#5              ;389
0000da  f81d1001          LDRB     r1,[sp,r1]            ;389
0000de  f001010f          AND      r1,r1,#0xf            ;389
0000e2  ea422101          ORR      r1,r2,r1,LSL #8       ;389
0000e6  4a32              LDR      r2,|L6.432|
0000e8  1d92              ADDS     r2,r2,#6              ;389
0000ea  f8221014          STRH     r1,[r2,r4,LSL #1]     ;389
0000ee  eb040144          ADD      r1,r4,r4,LSL #1       ;390
0000f2  0049              LSLS     r1,r1,#1              ;390
0000f4  1cc9              ADDS     r1,r1,#3              ;390
0000f6  f81d1001          LDRB     r1,[sp,r1]            ;390
0000fa  118a              ASRS     r2,r1,#6              ;390
0000fc  492c              LDR      r1,|L6.432|
0000fe  3109              ADDS     r1,r1,#9              ;390
000100  550a              STRB     r2,[r1,r4]            ;390
000102  eb040144          ADD      r1,r4,r4,LSL #1       ;391
000106  0049              LSLS     r1,r1,#1              ;391
000108  1d49              ADDS     r1,r1,#5              ;391
00010a  f81d1001          LDRB     r1,[sp,r1]            ;391
00010e  110a              ASRS     r2,r1,#4              ;391
000110  4927              LDR      r1,|L6.432|
000112  3108              ADDS     r1,r1,#8              ;391
000114  550a              STRB     r2,[r1,r4]            ;391
000116  1c60              ADDS     r0,r4,#1              ;376
000118  b2c4              UXTB     r4,r0                 ;376
                  |L6.282|
00011a  2c01              CMP      r4,#1                 ;376
00011c  dbb0              BLT      |L6.128|
                  |L6.286|
00011e  bf00              NOP                            ;383
000120  4823              LDR      r0,|L6.432|
000122  7800              LDRB     r0,[r0,#0]            ;397  ; g_tFT5X06
000124  2855              CMP      r0,#0x55              ;397
000126  d10d              BNE      |L6.324|
000128  4821              LDR      r0,|L6.432|
00012a  88c5              LDRH     r5,[r0,#6]            ;399  ; g_tFT5X06
00012c  8886              LDRH     r6,[r0,#4]            ;400  ; g_tFT5X06
00012e  f5b57ff0          CMP      r5,#0x1e0             ;403
000132  db01              BLT      |L6.312|
000134  f24015df          MOV      r5,#0x1df             ;405
                  |L6.312|
000138  f5b67f88          CMP      r6,#0x110             ;408
00013c  db21              BLT      |L6.386|
00013e  f240160f          MOV      r6,#0x10f             ;410
000142  e01e              B        |L6.386|
                  |L6.324|
000144  481a              LDR      r0,|L6.432|
000146  7800              LDRB     r0,[r0,#0]            ;413  ; g_tFT5X06
000148  280a              CMP      r0,#0xa               ;413
00014a  d10d              BNE      |L6.360|
00014c  4818              LDR      r0,|L6.432|
00014e  8885              LDRH     r5,[r0,#4]            ;415  ; g_tFT5X06
000150  88c6              LDRH     r6,[r0,#6]            ;416  ; g_tFT5X06
000152  f5b57f48          CMP      r5,#0x320             ;419
000156  db01              BLT      |L6.348|
000158  f240351f          MOV      r5,#0x31f             ;421
                  |L6.348|
00015c  f5b67ff0          CMP      r6,#0x1e0             ;423
000160  db0f              BLT      |L6.386|
000162  f24016df          MOV      r6,#0x1df             ;425
000166  e00c              B        |L6.386|
                  |L6.360|
000168  4811              LDR      r0,|L6.432|
00016a  8885              LDRH     r5,[r0,#4]            ;430  ; g_tFT5X06
00016c  88c6              LDRH     r6,[r0,#6]            ;431  ; g_tFT5X06
00016e  f5b57f48          CMP      r5,#0x320             ;434
000172  db01              BLT      |L6.376|
000174  f240351f          MOV      r5,#0x31f             ;436
                  |L6.376|
000178  f5b67ff0          CMP      r6,#0x1e0             ;438
00017c  db01              BLT      |L6.386|
00017e  f24016df          MOV      r6,#0x1df             ;440
                  |L6.386|
000182  480c              LDR      r0,|L6.436|
000184  7800              LDRB     r0,[r0,#0]            ;445  ; s_tp_down
000186  b938              CBNZ     r0,|L6.408|
000188  2001              MOVS     r0,#1                 ;447
00018a  490a              LDR      r1,|L6.436|
00018c  7008              STRB     r0,[r1,#0]            ;447
00018e  4632              MOV      r2,r6                 ;449
000190  4629              MOV      r1,r5                 ;449
000192  f7fffffe          BL       TOUCH_PutKey
000196  e004              B        |L6.418|
                  |L6.408|
000198  4632              MOV      r2,r6                 ;453
00019a  4629              MOV      r1,r5                 ;453
00019c  2002              MOVS     r0,#2                 ;453
00019e  f7fffffe          BL       TOUCH_PutKey
                  |L6.418|
0001a2  4806              LDR      r0,|L6.444|
0001a4  8005              STRH     r5,[r0,#0]            ;455
0001a6  4804              LDR      r0,|L6.440|
0001a8  8006              STRH     r6,[r0,#0]            ;456
0001aa  bf00              NOP      
0001ac  e72c              B        |L6.8|
;;;475    
                          ENDP

0001ae  0000              DCW      0x0000
                  |L6.432|
                          DCD      g_tFT5X06
                  |L6.436|
                          DCD      |symbol_number.26|
                  |L6.440|
                          DCD      y_save
                  |L6.444|
                          DCD      x_save

                          AREA ||i.FT5X06_Timer1ms||, CODE, READONLY, ALIGN=2

                  FT5X06_Timer1ms PROC
;;;169    */
;;;170    void FT5X06_Timer1ms(void)
000000  4802              LDR      r0,|L7.12|
;;;171    {
;;;172    	g_tFT5X06.TimerCount++;
000002  7880              LDRB     r0,[r0,#2]  ; g_tFT5X06
000004  1c40              ADDS     r0,r0,#1
000006  4901              LDR      r1,|L7.12|
000008  7088              STRB     r0,[r1,#2]
;;;173    }
00000a  4770              BX       lr
;;;174    
                          ENDP

                  |L7.12|
                          DCD      g_tFT5X06

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  g_tFT5X06
                          %        10

                          AREA ||.data||, DATA, ALIGN=1

                  s_tp_down
000000  00                DCB      0x00
                  |symbol_number.26|
000001  00                DCB      0x00
                  x_save
000002  0000              DCB      0x00,0x00
                  y_save
000004  0000              DCB      0x00,0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp_stm32f4xx\\src\\bsp_ts_ft5x06.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_bsp_ts_ft5x06_c_4fa934f7____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___15_bsp_ts_ft5x06_c_4fa934f7____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_bsp_ts_ft5x06_c_4fa934f7____REVSH|
#line 144
|__asm___15_bsp_ts_ft5x06_c_4fa934f7____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___15_bsp_ts_ft5x06_c_4fa934f7____RRX|
#line 300
|__asm___15_bsp_ts_ft5x06_c_4fa934f7____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
