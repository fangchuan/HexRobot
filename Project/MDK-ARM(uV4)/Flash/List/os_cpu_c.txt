; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\os_cpu_c.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\os_cpu_c.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\User\fonts -I..\..\emWin\GUI_X -I..\..\emWin\Config -I..\..\emWin\Include -I..\..\emWin\emWinTask -I..\..\uCOS-III\uC-CPU -I..\..\uCOS-III\uC-LIB -I..\..\uCOS-III\uCOS-III\Ports -I..\..\uCOS-III\uCOS-III\Source -I..\..\uCOS-III\uC-CPU\ARM-Cortex-M4\RealView -I..\..\uCOS-III\uC-LIB\Ports\ARM-Cortex-M4\RealView -I..\..\uCOS-III\uCOS-III\Ports\ARM-Cortex-M4\Generic\RealView -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\fatfs\src -I..\..\Libraries\CMSIS\Include -I..\..\User\control -I..\..\User\bsp_stm32f4xx\flash -I"F:\学习用具\2016毕业设计\V5-610_uCOS-III + emWin + FatFS\Project\MDK-ARM(uV4)\RTE" -I"E:\KEIL MDK5\ARM\PACK\Keil\STM32F4xx_DFP\2.6.0" -I"E:\KEIL MDK5\ARM\CMSIS\Include" -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F407xx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx --omf_browse=.\flash\obj\os_cpu_c.crf ..\..\uCOS-III\uCOS-III\Ports\ARM-Cortex-M4\Generic\RealView\os_cpu_c.c]
                          THUMB

                          AREA ||i.OSIdleTaskHook||, CODE, READONLY, ALIGN=2

                  OSIdleTaskHook PROC
;;;66     
;;;67     void  OSIdleTaskHook (void)
000000  b510              PUSH     {r4,lr}
;;;68     {
;;;69     #if OS_CFG_APP_HOOKS_EN > 0u
;;;70         if (OS_AppIdleTaskHookPtr != (OS_APP_HOOK_VOID)0) {
000002  4803              LDR      r0,|L1.16|
000004  6800              LDR      r0,[r0,#0]  ; OS_AppIdleTaskHookPtr
000006  b110              CBZ      r0,|L1.14|
;;;71             (*OS_AppIdleTaskHookPtr)();
000008  4801              LDR      r0,|L1.16|
00000a  6800              LDR      r0,[r0,#0]  ; OS_AppIdleTaskHookPtr
00000c  4780              BLX      r0
                  |L1.14|
;;;72         }
;;;73     #endif
;;;74     }
00000e  bd10              POP      {r4,pc}
;;;75     
                          ENDP

                  |L1.16|
                          DCD      OS_AppIdleTaskHookPtr

                          AREA ||i.OSInitHook||, CODE, READONLY, ALIGN=2

                  OSInitHook PROC
;;;89     
;;;90     void  OSInitHook (void)
000000  4806              LDR      r0,|L2.28|
;;;91     {
;;;92                                                                         /* 8-byte align the ISR stack.                            */    
;;;93         OS_CPU_ExceptStkBase = (CPU_STK *)(OSCfg_ISRStkBasePtr + OSCfg_ISRStkSize);
000002  6800              LDR      r0,[r0,#0]  ; OSCfg_ISRStkBasePtr
000004  4906              LDR      r1,|L2.32|
000006  6809              LDR      r1,[r1,#0]  ; OSCfg_ISRStkSize
000008  eb000081          ADD      r0,r0,r1,LSL #2
00000c  4905              LDR      r1,|L2.36|
00000e  6008              STR      r0,[r1,#0]  ; OS_CPU_ExceptStkBase
;;;94         OS_CPU_ExceptStkBase = (CPU_STK *)((CPU_STK)(OS_CPU_ExceptStkBase) & 0xFFFFFFF8);
000010  4608              MOV      r0,r1
000012  6800              LDR      r0,[r0,#0]  ; OS_CPU_ExceptStkBase
000014  f0200007          BIC      r0,r0,#7
000018  6008              STR      r0,[r1,#0]  ; OS_CPU_ExceptStkBase
;;;95     }
00001a  4770              BX       lr
;;;96     
                          ENDP

                  |L2.28|
                          DCD      OSCfg_ISRStkBasePtr
                  |L2.32|
                          DCD      OSCfg_ISRStkSize
                  |L2.36|
                          DCD      OS_CPU_ExceptStkBase

                          AREA ||i.OSStatTaskHook||, CODE, READONLY, ALIGN=2

                  OSStatTaskHook PROC
;;;111    
;;;112    void  OSStatTaskHook (void)
000000  b510              PUSH     {r4,lr}
;;;113    {
;;;114    #if OS_CFG_APP_HOOKS_EN > 0u
;;;115        if (OS_AppStatTaskHookPtr != (OS_APP_HOOK_VOID)0) {
000002  4803              LDR      r0,|L3.16|
000004  6800              LDR      r0,[r0,#0]  ; OS_AppStatTaskHookPtr
000006  b110              CBZ      r0,|L3.14|
;;;116            (*OS_AppStatTaskHookPtr)();
000008  4801              LDR      r0,|L3.16|
00000a  6800              LDR      r0,[r0,#0]  ; OS_AppStatTaskHookPtr
00000c  4780              BLX      r0
                  |L3.14|
;;;117        }
;;;118    #endif
;;;119    }
00000e  bd10              POP      {r4,pc}
;;;120    
                          ENDP

                  |L3.16|
                          DCD      OS_AppStatTaskHookPtr

                          AREA ||i.OSTaskCreateHook||, CODE, READONLY, ALIGN=2

                  OSTaskCreateHook PROC
;;;134    
;;;135    void  OSTaskCreateHook (OS_TCB  *p_tcb)
000000  b510              PUSH     {r4,lr}
;;;136    {
000002  4604              MOV      r4,r0
;;;137    #if OS_CFG_APP_HOOKS_EN > 0u
;;;138        if (OS_AppTaskCreateHookPtr != (OS_APP_HOOK_TCB)0) {
000004  4803              LDR      r0,|L4.20|
000006  6800              LDR      r0,[r0,#0]  ; OS_AppTaskCreateHookPtr
000008  b118              CBZ      r0,|L4.18|
;;;139            (*OS_AppTaskCreateHookPtr)(p_tcb);
00000a  4620              MOV      r0,r4
00000c  4901              LDR      r1,|L4.20|
00000e  6809              LDR      r1,[r1,#0]  ; OS_AppTaskCreateHookPtr
000010  4788              BLX      r1
                  |L4.18|
;;;140        }
;;;141    #else
;;;142        (void)p_tcb;                                            /* Prevent compiler warning                               */
;;;143    #endif
;;;144    }
000012  bd10              POP      {r4,pc}
;;;145    
                          ENDP

                  |L4.20|
                          DCD      OS_AppTaskCreateHookPtr

                          AREA ||i.OSTaskDelHook||, CODE, READONLY, ALIGN=2

                  OSTaskDelHook PROC
;;;159    
;;;160    void  OSTaskDelHook (OS_TCB  *p_tcb)
000000  b510              PUSH     {r4,lr}
;;;161    {
000002  4604              MOV      r4,r0
;;;162    #if OS_CFG_APP_HOOKS_EN > 0u
;;;163        if (OS_AppTaskDelHookPtr != (OS_APP_HOOK_TCB)0) {
000004  4803              LDR      r0,|L5.20|
000006  6800              LDR      r0,[r0,#0]  ; OS_AppTaskDelHookPtr
000008  b118              CBZ      r0,|L5.18|
;;;164            (*OS_AppTaskDelHookPtr)(p_tcb);
00000a  4620              MOV      r0,r4
00000c  4901              LDR      r1,|L5.20|
00000e  6809              LDR      r1,[r1,#0]  ; OS_AppTaskDelHookPtr
000010  4788              BLX      r1
                  |L5.18|
;;;165        }
;;;166    #else
;;;167        (void)p_tcb;                                            /* Prevent compiler warning                               */
;;;168    #endif
;;;169    }
000012  bd10              POP      {r4,pc}
;;;170    
                          ENDP

                  |L5.20|
                          DCD      OS_AppTaskDelHookPtr

                          AREA ||i.OSTaskReturnHook||, CODE, READONLY, ALIGN=2

                  OSTaskReturnHook PROC
;;;185    
;;;186    void  OSTaskReturnHook (OS_TCB  *p_tcb)
000000  b510              PUSH     {r4,lr}
;;;187    {
000002  4604              MOV      r4,r0
;;;188    #if OS_CFG_APP_HOOKS_EN > 0u
;;;189        if (OS_AppTaskReturnHookPtr != (OS_APP_HOOK_TCB)0) {
000004  4803              LDR      r0,|L6.20|
000006  6800              LDR      r0,[r0,#0]  ; OS_AppTaskReturnHookPtr
000008  b118              CBZ      r0,|L6.18|
;;;190            (*OS_AppTaskReturnHookPtr)(p_tcb);
00000a  4620              MOV      r0,r4
00000c  4901              LDR      r1,|L6.20|
00000e  6809              LDR      r1,[r1,#0]  ; OS_AppTaskReturnHookPtr
000010  4788              BLX      r1
                  |L6.18|
;;;191        }
;;;192    #else
;;;193        (void)p_tcb;                                            /* Prevent compiler warning                               */
;;;194    #endif
;;;195    }
000012  bd10              POP      {r4,pc}
;;;196    
                          ENDP

                  |L6.20|
                          DCD      OS_AppTaskReturnHookPtr

                          AREA ||i.OSTaskStkInit||, CODE, READONLY, ALIGN=2

                  OSTaskStkInit PROC
;;;226    
;;;227    CPU_STK  *OSTaskStkInit (OS_TASK_PTR    p_task,
000000  b5f0              PUSH     {r4-r7,lr}
;;;228                             void          *p_arg,
;;;229                             CPU_STK       *p_stk_base,
;;;230                             CPU_STK       *p_stk_limit,
;;;231                             CPU_STK_SIZE   stk_size,
;;;232                             OS_OPT         opt)
;;;233    {
000002  4604              MOV      r4,r0
000004  e9dd5605          LDRD     r5,r6,[sp,#0x14]
;;;234        CPU_STK  *p_stk;
;;;235    
;;;236    
;;;237        (void)opt;                                              /* Prevent compiler warning                               */
;;;238    
;;;239        p_stk = &p_stk_base[stk_size];                          /* Load stack pointer                                     */
000008  eb020085          ADD      r0,r2,r5,LSL #2
;;;240                                                                    /* Align the stack to 8-bytes.                            */
;;;241        p_stk = (CPU_STK *)((CPU_STK)(p_stk) & 0xFFFFFFF8);
00000c  f0200007          BIC      r0,r0,#7
;;;242                                                                /* Registers stacked as if auto-saved on exception        */
;;;243      
;;;244    	*--p_stk = (CPU_STK)0x01000000u;                        /* xPSR                                                   */
000010  f04f7c80          MOV      r12,#0x1000000
000014  1f07              SUBS     r7,r0,#4
000016  4638              MOV      r0,r7
000018  f8c7c000          STR      r12,[r7,#0]
;;;245        *--p_stk = (CPU_STK)p_task;                             /* Entry Point                                            */
00001c  1f07              SUBS     r7,r0,#4
00001e  4638              MOV      r0,r7
000020  603c              STR      r4,[r7,#0]
;;;246        *--p_stk = (CPU_STK)OS_TaskReturn;                      /* R14 (LR)                                               */
000022  f8dfc0a8          LDR      r12,|L7.204|
000026  1f07              SUBS     r7,r0,#4
000028  4638              MOV      r0,r7
00002a  f8c7c000          STR      r12,[r7,#0]
;;;247        *--p_stk = (CPU_STK)0x12121212u;                        /* R12                                                    */
00002e  f04f3c12          MOV      r12,#0x12121212
000032  1f07              SUBS     r7,r0,#4
000034  4638              MOV      r0,r7
000036  f8c7c000          STR      r12,[r7,#0]
;;;248        *--p_stk = (CPU_STK)0x03030303u;                        /* R3                                                     */
00003a  f04f3c03          MOV      r12,#0x3030303
00003e  1f07              SUBS     r7,r0,#4
000040  4638              MOV      r0,r7
000042  f8c7c000          STR      r12,[r7,#0]
;;;249        *--p_stk = (CPU_STK)0x02020202u;                        /* R2                                                     */
000046  f04f3c02          MOV      r12,#0x2020202
00004a  1f07              SUBS     r7,r0,#4
00004c  4638              MOV      r0,r7
00004e  f8c7c000          STR      r12,[r7,#0]
;;;250        *--p_stk = (CPU_STK)p_stk_limit;                        /* R1                                                     */
000052  1f07              SUBS     r7,r0,#4
000054  4638              MOV      r0,r7
000056  603b              STR      r3,[r7,#0]
;;;251        *--p_stk = (CPU_STK)p_arg;                              /* R0 : argument                                          */
000058  1f07              SUBS     r7,r0,#4
00005a  4638              MOV      r0,r7
00005c  6039              STR      r1,[r7,#0]
;;;252                                                                /* Remaining registers saved on process stack             */
;;;253        *--p_stk = (CPU_STK)0x11111111u;                        /* R11                                                    */
00005e  f04f3c11          MOV      r12,#0x11111111
000062  1f07              SUBS     r7,r0,#4
000064  4638              MOV      r0,r7
000066  f8c7c000          STR      r12,[r7,#0]
;;;254        *--p_stk = (CPU_STK)0x10101010u;                        /* R10                                                    */
00006a  f04f3c10          MOV      r12,#0x10101010
00006e  1f07              SUBS     r7,r0,#4
000070  4638              MOV      r0,r7
000072  f8c7c000          STR      r12,[r7,#0]
;;;255        *--p_stk = (CPU_STK)0x09090909u;                        /* R9                                                     */
000076  f04f3c09          MOV      r12,#0x9090909
00007a  1f07              SUBS     r7,r0,#4
00007c  4638              MOV      r0,r7
00007e  f8c7c000          STR      r12,[r7,#0]
;;;256        *--p_stk = (CPU_STK)0x08080808u;                        /* R8                                                     */
000082  f04f3c08          MOV      r12,#0x8080808
000086  1f07              SUBS     r7,r0,#4
000088  4638              MOV      r0,r7
00008a  f8c7c000          STR      r12,[r7,#0]
;;;257        *--p_stk = (CPU_STK)0x07070707u;                        /* R7                                                     */
00008e  f04f3c07          MOV      r12,#0x7070707
000092  1f07              SUBS     r7,r0,#4
000094  4638              MOV      r0,r7
000096  f8c7c000          STR      r12,[r7,#0]
;;;258        *--p_stk = (CPU_STK)0x06060606u;                        /* R6                                                     */
00009a  f04f3c06          MOV      r12,#0x6060606
00009e  1f07              SUBS     r7,r0,#4
0000a0  4638              MOV      r0,r7
0000a2  f8c7c000          STR      r12,[r7,#0]
;;;259        *--p_stk = (CPU_STK)0x05050505u;                        /* R5                                                     */
0000a6  f04f3c05          MOV      r12,#0x5050505
0000aa  1f07              SUBS     r7,r0,#4
0000ac  4638              MOV      r0,r7
0000ae  f8c7c000          STR      r12,[r7,#0]
;;;260        *--p_stk = (CPU_STK)0x04040404u;                        /* R4                                                     */
0000b2  f04f3c04          MOV      r12,#0x4040404
0000b6  1f07              SUBS     r7,r0,#4
0000b8  4638              MOV      r0,r7
0000ba  f8c7c000          STR      r12,[r7,#0]
;;;261    
;;;262        *--p_stk = (CPU_STK)0xFFFFFFFDUL;   
0000be  f06f0c02          MVN      r12,#2
0000c2  1f07              SUBS     r7,r0,#4
0000c4  4638              MOV      r0,r7
0000c6  f8c7c000          STR      r12,[r7,#0]
;;;263    	
;;;264    	return (p_stk);
;;;265    }
0000ca  bdf0              POP      {r4-r7,pc}
;;;266    
                          ENDP

                  |L7.204|
                          DCD      OS_TaskReturn

                          AREA ||i.OSTaskSwHook||, CODE, READONLY, ALIGN=2

                  OSTaskSwHook PROC
;;;284    
;;;285    void  OSTaskSwHook (void)
000000  b510              PUSH     {r4,lr}
;;;286    {
;;;287    #if OS_CFG_TASK_PROFILE_EN > 0u
;;;288        CPU_TS  ts;
;;;289    #endif
;;;290    #ifdef  CPU_CFG_INT_DIS_MEAS_EN
;;;291        CPU_TS  int_dis_time;
;;;292    #endif
;;;293    
;;;294    
;;;295    #if OS_CFG_APP_HOOKS_EN > 0u
;;;296        if (OS_AppTaskSwHookPtr != (OS_APP_HOOK_VOID)0) {
000002  4815              LDR      r0,|L8.88|
000004  6800              LDR      r0,[r0,#0]  ; OS_AppTaskSwHookPtr
000006  b110              CBZ      r0,|L8.14|
;;;297            (*OS_AppTaskSwHookPtr)();
000008  4813              LDR      r0,|L8.88|
00000a  6800              LDR      r0,[r0,#0]  ; OS_AppTaskSwHookPtr
00000c  4780              BLX      r0
                  |L8.14|
;;;298        }
;;;299    #endif
;;;300    
;;;301    #if OS_CFG_TASK_PROFILE_EN > 0u
;;;302        ts = OS_TS_GET();
00000e  f7fffffe          BL       CPU_TS_TmrRd
000012  4604              MOV      r4,r0
;;;303        if (OSTCBCurPtr != OSTCBHighRdyPtr) {
000014  4811              LDR      r0,|L8.92|
000016  6800              LDR      r0,[r0,#0]  ; OSTCBCurPtr
000018  4911              LDR      r1,|L8.96|
00001a  6809              LDR      r1,[r1,#0]  ; OSTCBHighRdyPtr
00001c  4288              CMP      r0,r1
00001e  d015              BEQ      |L8.76|
;;;304            OSTCBCurPtr->CyclesDelta  = ts - OSTCBCurPtr->CyclesStart;
000020  480e              LDR      r0,|L8.92|
000022  6800              LDR      r0,[r0,#0]  ; OSTCBCurPtr
000024  f8d00098          LDR      r0,[r0,#0x98]
000028  1a20              SUBS     r0,r4,r0
00002a  490c              LDR      r1,|L8.92|
00002c  6809              LDR      r1,[r1,#0]  ; OSTCBCurPtr
00002e  f8c10094          STR      r0,[r1,#0x94]
;;;305            OSTCBCurPtr->CyclesTotal += (OS_CYCLES)OSTCBCurPtr->CyclesDelta;
000032  480a              LDR      r0,|L8.92|
000034  6800              LDR      r0,[r0,#0]  ; OSTCBCurPtr
000036  f8d0009c          LDR      r0,[r0,#0x9c]
00003a  4908              LDR      r1,|L8.92|
00003c  6809              LDR      r1,[r1,#0]  ; OSTCBCurPtr
00003e  f8d11094          LDR      r1,[r1,#0x94]
000042  4408              ADD      r0,r0,r1
000044  4905              LDR      r1,|L8.92|
000046  6809              LDR      r1,[r1,#0]  ; OSTCBCurPtr
000048  f8c1009c          STR      r0,[r1,#0x9c]
                  |L8.76|
;;;306        }
;;;307    
;;;308        OSTCBHighRdyPtr->CyclesStart = ts;
00004c  4804              LDR      r0,|L8.96|
00004e  6800              LDR      r0,[r0,#0]  ; OSTCBHighRdyPtr
000050  f8c04098          STR      r4,[r0,#0x98]
;;;309    #endif
;;;310    
;;;311    #ifdef  CPU_CFG_INT_DIS_MEAS_EN
;;;312        int_dis_time = CPU_IntDisMeasMaxCurReset();             /* Keep track of per-task interrupt disable time          */
;;;313        if (OSTCBCurPtr->IntDisTimeMax < int_dis_time) {
;;;314            OSTCBCurPtr->IntDisTimeMax = int_dis_time;
;;;315        }
;;;316    #endif
;;;317    
;;;318    #if OS_CFG_SCHED_LOCK_TIME_MEAS_EN > 0u
;;;319                                                                /* Keep track of per-task scheduler lock time             */
;;;320        if (OSTCBCurPtr->SchedLockTimeMax < OSSchedLockTimeMaxCur) {
;;;321            OSTCBCurPtr->SchedLockTimeMax = OSSchedLockTimeMaxCur;
;;;322        }
;;;323        OSSchedLockTimeMaxCur = (CPU_TS)0;                      /* Reset the per-task value                               */
;;;324    #endif
;;;325    }
000054  bd10              POP      {r4,pc}
;;;326    
                          ENDP

000056  0000              DCW      0x0000
                  |L8.88|
                          DCD      OS_AppTaskSwHookPtr
                  |L8.92|
                          DCD      OSTCBCurPtr
                  |L8.96|
                          DCD      OSTCBHighRdyPtr

                          AREA ||i.OSTimeTickHook||, CODE, READONLY, ALIGN=2

                  OSTimeTickHook PROC
;;;340    
;;;341    void  OSTimeTickHook (void)
000000  b510              PUSH     {r4,lr}
;;;342    {
;;;343    #if OS_CFG_APP_HOOKS_EN > 0u
;;;344        if (OS_AppTimeTickHookPtr != (OS_APP_HOOK_VOID)0) {
000002  4803              LDR      r0,|L9.16|
000004  6800              LDR      r0,[r0,#0]  ; OS_AppTimeTickHookPtr
000006  b110              CBZ      r0,|L9.14|
;;;345            (*OS_AppTimeTickHookPtr)();
000008  4801              LDR      r0,|L9.16|
00000a  6800              LDR      r0,[r0,#0]  ; OS_AppTimeTickHookPtr
00000c  4780              BLX      r0
                  |L9.14|
;;;346        }
;;;347    #endif
;;;348    }
00000e  bd10              POP      {r4,pc}
;;;349    
                          ENDP

                  |L9.16|
                          DCD      OS_AppTimeTickHookPtr

                          AREA ||i.OS_CPU_SysTickHandler||, CODE, READONLY, ALIGN=2

                  OS_CPU_SysTickHandler PROC
;;;364    
;;;365    void  OS_CPU_SysTickHandler (void)
000000  b510              PUSH     {r4,lr}
;;;366    {
;;;367        CPU_SR_ALLOC();
000002  2400              MOVS     r4,#0
;;;368    
;;;369    
;;;370        CPU_CRITICAL_ENTER();
000004  bf00              NOP      
000006  bf00              NOP      
000008  f7fffffe          BL       CPU_SR_Save
00000c  4604              MOV      r4,r0
00000e  bf00              NOP      
000010  bf00              NOP      
;;;371        OSIntNestingCtr++;                                      /* Tell uC/OS-III that we are starting an ISR             */
000012  4808              LDR      r0,|L10.52|
000014  7800              LDRB     r0,[r0,#0]  ; OSIntNestingCtr
000016  1c40              ADDS     r0,r0,#1
000018  4906              LDR      r1,|L10.52|
00001a  7008              STRB     r0,[r1,#0]
;;;372        CPU_CRITICAL_EXIT();
00001c  bf00              NOP      
00001e  bf00              NOP      
000020  4620              MOV      r0,r4
000022  f7fffffe          BL       CPU_SR_Restore
000026  bf00              NOP      
000028  bf00              NOP      
;;;373    
;;;374        OSTimeTick();                                           /* Call uC/OS-III's OSTimeTick()                          */
00002a  f7fffffe          BL       OSTimeTick
;;;375    
;;;376        OSIntExit();                                            /* Tell uC/OS-III that we are leaving the ISR             */
00002e  f7fffffe          BL       OSIntExit
;;;377    }
000032  bd10              POP      {r4,pc}
;;;378    
                          ENDP

                  |L10.52|
                          DCD      OSIntNestingCtr

                          AREA ||i.OS_CPU_SysTickInit||, CODE, READONLY, ALIGN=2

                  OS_CPU_SysTickInit PROC
;;;392    
;;;393    void  OS_CPU_SysTickInit (CPU_INT32U  cnts)
000000  4601              MOV      r1,r0
;;;394    {
;;;395        CPU_INT32U  prio;
;;;396    
;;;397    
;;;398        CPU_REG_NVIC_ST_RELOAD = cnts - 1u;
000002  1e4a              SUBS     r2,r1,#1
000004  f04f23e0          MOV      r3,#0xe000e000
000008  615a              STR      r2,[r3,#0x14]
;;;399    
;;;400                                                                /* Set SysTick handler prio.                              */
;;;401        prio                   = CPU_REG_NVIC_SHPRI3;
00000a  4a08              LDR      r2,|L11.44|
00000c  6810              LDR      r0,[r2,#0]
;;;402        prio                  &= DEF_BIT_FIELD(24, 0);
00000e  f020407f          BIC      r0,r0,#0xff000000
;;;403        prio                  |= DEF_BIT_MASK(OS_CPU_CFG_SYSTICK_PRIO, 24);
000012  bf00              NOP      
;;;404    
;;;405        CPU_REG_NVIC_SHPRI3    = prio;
000014  6010              STR      r0,[r2,#0]
;;;406    
;;;407                                                                /* Enable timer.                                          */
;;;408        CPU_REG_NVIC_ST_CTRL  |= CPU_REG_NVIC_ST_CTRL_CLKSOURCE |
000016  461a              MOV      r2,r3
000018  6912              LDR      r2,[r2,#0x10]
00001a  f0420205          ORR      r2,r2,#5
00001e  611a              STR      r2,[r3,#0x10]
;;;409                                 CPU_REG_NVIC_ST_CTRL_ENABLE;
;;;410                                                                /* Enable timer interrupt.                                */
;;;411        CPU_REG_NVIC_ST_CTRL  |= CPU_REG_NVIC_ST_CTRL_TICKINT;
000020  461a              MOV      r2,r3
000022  6912              LDR      r2,[r2,#0x10]
000024  f0420202          ORR      r2,r2,#2
000028  611a              STR      r2,[r3,#0x10]
;;;412    }
00002a  4770              BX       lr
;;;413    
                          ENDP

                  |L11.44|
                          DCD      0xe000ed20

                          AREA ||.data||, DATA, ALIGN=2

                  OS_CPU_ExceptStkBase
                          DCD      0x00000000
