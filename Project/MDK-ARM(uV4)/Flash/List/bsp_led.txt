; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_led.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_led.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\User\fonts -I..\..\emWin\GUI_X -I..\..\emWin\Config -I..\..\emWin\Include -I..\..\emWin\emWinTask -I..\..\uCOS-III\uC-CPU -I..\..\uCOS-III\uC-LIB -I..\..\uCOS-III\uCOS-III\Ports -I..\..\uCOS-III\uCOS-III\Source -I..\..\uCOS-III\uC-CPU\ARM-Cortex-M4\RealView -I..\..\uCOS-III\uC-LIB\Ports\ARM-Cortex-M4\RealView -I..\..\uCOS-III\uCOS-III\Ports\ARM-Cortex-M4\Generic\RealView -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\fatfs\src -I..\..\Libraries\CMSIS\Include -I..\..\User\control -I..\..\User\bsp_stm32f4xx\flash -I"F:\学习用具\2016毕业设计\V5-610_uCOS-III + emWin + FatFS\Project\MDK-ARM(uV4)\RTE" -I"E:\KEIL MDK5\ARM\PACK\Keil\STM32F4xx_DFP\2.6.0" -I"E:\KEIL MDK5\ARM\CMSIS\Include" -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F407xx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx --omf_browse=.\flash\obj\bsp_led.crf ..\..\User\bsp_stm32f4xx\src\bsp_led.c]
                          THUMB

                          AREA ||i.bsp_InitLed||, CODE, READONLY, ALIGN=2

                  bsp_InitLed PROC
;;;82     */
;;;83     void bsp_InitLed(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;84     {
;;;85     	GPIO_InitTypeDef GPIO_InitStructure;
;;;86     
;;;87     	/* 打开GPIO时钟 */
;;;88     	RCC_AHB1PeriphClockCmd(RCC_ALL_LED, ENABLE);
000002  2101              MOVS     r1,#1
000004  f44f7092          MOV      r0,#0x124
000008  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;89     
;;;90     	/*
;;;91     		配置所有的LED指示灯GPIO为推挽输出模式
;;;92     		由于将GPIO设置为输出时，GPIO输出寄存器的值缺省是0，因此会驱动LED点亮.
;;;93     		这是我不希望的，因此在改变GPIO为输出前，先关闭LED指示灯
;;;94     	*/
;;;95     	bsp_LedOff(1);
00000c  2001              MOVS     r0,#1
00000e  f7fffffe          BL       bsp_LedOff
;;;96     	bsp_LedOff(2);
000012  2002              MOVS     r0,#2
000014  f7fffffe          BL       bsp_LedOff
;;;97     	bsp_LedOff(3);
000018  2003              MOVS     r0,#3
00001a  f7fffffe          BL       bsp_LedOff
;;;98     	bsp_LedOff(4);
00001e  2004              MOVS     r0,#4
000020  f7fffffe          BL       bsp_LedOff
;;;99     
;;;100    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;		/* 设为输出口 */
000024  2001              MOVS     r0,#1
000026  f88d0004          STRB     r0,[sp,#4]
;;;101    	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;		/* 设为推挽模式 */
00002a  2000              MOVS     r0,#0
00002c  f88d0006          STRB     r0,[sp,#6]
;;;102    	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;	/* 上下拉电阻不使能 */
000030  f88d0007          STRB     r0,[sp,#7]
;;;103    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;	/* IO口最大速度 */
000034  2003              MOVS     r0,#3
000036  f88d0005          STRB     r0,[sp,#5]
;;;104    
;;;105    	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED1;
00003a  f44f6080          MOV      r0,#0x400
00003e  9000              STR      r0,[sp,#0]
;;;106    	GPIO_Init(GPIO_PORT_LED1, &GPIO_InitStructure);
000040  4669              MOV      r1,sp
000042  480b              LDR      r0,|L1.112|
000044  f7fffffe          BL       GPIO_Init
;;;107    
;;;108    	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED2;
000048  2080              MOVS     r0,#0x80
00004a  9000              STR      r0,[sp,#0]
;;;109    	GPIO_Init(GPIO_PORT_LED2, &GPIO_InitStructure);
00004c  4669              MOV      r1,sp
00004e  4809              LDR      r0,|L1.116|
000050  f7fffffe          BL       GPIO_Init
;;;110    
;;;111    	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED3;
000054  f44f7080          MOV      r0,#0x100
000058  9000              STR      r0,[sp,#0]
;;;112    	GPIO_Init(GPIO_PORT_LED3, &GPIO_InitStructure);
00005a  4669              MOV      r1,sp
00005c  4805              LDR      r0,|L1.116|
00005e  f7fffffe          BL       GPIO_Init
;;;113    
;;;114    	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED4;
000062  2004              MOVS     r0,#4
000064  9000              STR      r0,[sp,#0]
;;;115    	GPIO_Init(GPIO_PORT_LED4, &GPIO_InitStructure);
000066  4669              MOV      r1,sp
000068  4803              LDR      r0,|L1.120|
00006a  f7fffffe          BL       GPIO_Init
;;;116    }
00006e  bd1c              POP      {r2-r4,pc}
;;;117    
                          ENDP

                  |L1.112|
                          DCD      0x40022000
                  |L1.116|
                          DCD      0x40021400
                  |L1.120|
                          DCD      0x40020800

                          AREA ||i.bsp_IsLedOn||, CODE, READONLY, ALIGN=2

                  bsp_IsLedOn PROC
;;;213    */
;;;214    uint8_t bsp_IsLedOn(uint8_t _no)
000000  4601              MOV      r1,r0
;;;215    {
;;;216    	if (_no == 1)
000002  2901              CMP      r1,#1
000004  d108              BNE      |L2.24|
;;;217    	{
;;;218    		if ((GPIO_PORT_LED1->ODR & GPIO_PIN_LED1) == 0)
000006  4816              LDR      r0,|L2.96|
000008  6940              LDR      r0,[r0,#0x14]
00000a  f4006080          AND      r0,r0,#0x400
00000e  b908              CBNZ     r0,|L2.20|
;;;219    		{
;;;220    			return 1;
000010  2001              MOVS     r0,#1
                  |L2.18|
;;;221    		}
;;;222    		return 0;
;;;223    	}
;;;224    	else if (_no == 2)
;;;225    	{
;;;226    		if ((GPIO_PORT_LED2->ODR & GPIO_PIN_LED2) == 0)
;;;227    		{
;;;228    			return 1;
;;;229    		}
;;;230    		return 0;
;;;231    	}
;;;232    	else if (_no == 3)
;;;233    	{
;;;234    		if ((GPIO_PORT_LED3->ODR & GPIO_PIN_LED3) == 0)
;;;235    		{
;;;236    			return 1;
;;;237    		}
;;;238    		return 0;
;;;239    	}
;;;240    	else if (_no == 4)
;;;241    	{
;;;242    		if ((GPIO_PORT_LED4->ODR & GPIO_PIN_LED4) == 0)
;;;243    		{
;;;244    			return 1;
;;;245    		}
;;;246    		return 0;
;;;247    	}
;;;248    
;;;249    	return 0;
;;;250    }
000012  4770              BX       lr
                  |L2.20|
000014  2000              MOVS     r0,#0                 ;222
000016  e7fc              B        |L2.18|
                  |L2.24|
000018  2902              CMP      r1,#2                 ;224
00001a  d108              BNE      |L2.46|
00001c  4811              LDR      r0,|L2.100|
00001e  6800              LDR      r0,[r0,#0]            ;226
000020  f0000080          AND      r0,r0,#0x80           ;226
000024  b908              CBNZ     r0,|L2.42|
000026  2001              MOVS     r0,#1                 ;228
000028  e7f3              B        |L2.18|
                  |L2.42|
00002a  2000              MOVS     r0,#0                 ;230
00002c  e7f1              B        |L2.18|
                  |L2.46|
00002e  2903              CMP      r1,#3                 ;232
000030  d108              BNE      |L2.68|
000032  480c              LDR      r0,|L2.100|
000034  6800              LDR      r0,[r0,#0]            ;234
000036  f4007080          AND      r0,r0,#0x100          ;234
00003a  b908              CBNZ     r0,|L2.64|
00003c  2001              MOVS     r0,#1                 ;236
00003e  e7e8              B        |L2.18|
                  |L2.64|
000040  2000              MOVS     r0,#0                 ;238
000042  e7e6              B        |L2.18|
                  |L2.68|
000044  2904              CMP      r1,#4                 ;240
000046  d108              BNE      |L2.90|
000048  4807              LDR      r0,|L2.104|
00004a  6800              LDR      r0,[r0,#0]            ;242
00004c  f0000004          AND      r0,r0,#4              ;242
000050  b908              CBNZ     r0,|L2.86|
000052  2001              MOVS     r0,#1                 ;244
000054  e7dd              B        |L2.18|
                  |L2.86|
000056  2000              MOVS     r0,#0                 ;246
000058  e7db              B        |L2.18|
                  |L2.90|
00005a  2000              MOVS     r0,#0                 ;249
00005c  e7d9              B        |L2.18|
;;;251    
                          ENDP

00005e  0000              DCW      0x0000
                  |L2.96|
                          DCD      0x40022000
                  |L2.100|
                          DCD      0x40021414
                  |L2.104|
                          DCD      0x40020814

                          AREA ||i.bsp_LedOff||, CODE, READONLY, ALIGN=2

                  bsp_LedOff PROC
;;;155    */
;;;156    void bsp_LedOff(uint8_t _no)
000000  1e41              SUBS     r1,r0,#1
;;;157    {
;;;158    	_no--;
000002  b2c8              UXTB     r0,r1
;;;159    
;;;160    	if (_no == 0)
000004  b920              CBNZ     r0,|L3.16|
;;;161    	{
;;;162    		GPIO_PORT_LED1->BSRRL = GPIO_PIN_LED1;
000006  f44f6180          MOV      r1,#0x400
00000a  4a0a              LDR      r2,|L3.52|
00000c  8311              STRH     r1,[r2,#0x18]
00000e  e010              B        |L3.50|
                  |L3.16|
;;;163    	}
;;;164    	else if (_no == 1)
000010  2801              CMP      r0,#1
000012  d103              BNE      |L3.28|
;;;165    	{
;;;166    		GPIO_PORT_LED2->BSRRL = GPIO_PIN_LED2;
000014  2180              MOVS     r1,#0x80
000016  4a08              LDR      r2,|L3.56|
000018  8011              STRH     r1,[r2,#0]
00001a  e00a              B        |L3.50|
                  |L3.28|
;;;167    	}
;;;168    	else if (_no == 2)
00001c  2802              CMP      r0,#2
00001e  d103              BNE      |L3.40|
;;;169    	{
;;;170    		GPIO_PORT_LED3->BSRRL = GPIO_PIN_LED3;
000020  01c1              LSLS     r1,r0,#7
000022  4a05              LDR      r2,|L3.56|
000024  8011              STRH     r1,[r2,#0]
000026  e004              B        |L3.50|
                  |L3.40|
;;;171    	}
;;;172    	else if (_no == 3)
000028  2803              CMP      r0,#3
00002a  d102              BNE      |L3.50|
;;;173    	{
;;;174    		GPIO_PORT_LED4->BSRRL = GPIO_PIN_LED4;
00002c  2104              MOVS     r1,#4
00002e  4a03              LDR      r2,|L3.60|
000030  8011              STRH     r1,[r2,#0]
                  |L3.50|
;;;175    	}
;;;176    }
000032  4770              BX       lr
;;;177    
                          ENDP

                  |L3.52|
                          DCD      0x40022000
                  |L3.56|
                          DCD      0x40021418
                  |L3.60|
                          DCD      0x40020818

                          AREA ||i.bsp_LedOn||, CODE, READONLY, ALIGN=2

                  bsp_LedOn PROC
;;;125    */
;;;126    void bsp_LedOn(uint8_t _no)
000000  1e41              SUBS     r1,r0,#1
;;;127    {
;;;128    	_no--;
000002  b2c8              UXTB     r0,r1
;;;129    
;;;130    	if (_no == 0)
000004  b920              CBNZ     r0,|L4.16|
;;;131    	{
;;;132    		GPIO_PORT_LED1->BSRRH = GPIO_PIN_LED1;
000006  f44f6180          MOV      r1,#0x400
00000a  4a0a              LDR      r2,|L4.52|
00000c  8351              STRH     r1,[r2,#0x1a]
00000e  e010              B        |L4.50|
                  |L4.16|
;;;133    	}
;;;134    	else if (_no == 1)
000010  2801              CMP      r0,#1
000012  d103              BNE      |L4.28|
;;;135    	{
;;;136    		GPIO_PORT_LED2->BSRRH = GPIO_PIN_LED2;
000014  2180              MOVS     r1,#0x80
000016  4a08              LDR      r2,|L4.56|
000018  8011              STRH     r1,[r2,#0]
00001a  e00a              B        |L4.50|
                  |L4.28|
;;;137    	}
;;;138    	else if (_no == 2)
00001c  2802              CMP      r0,#2
00001e  d103              BNE      |L4.40|
;;;139    	{
;;;140    		GPIO_PORT_LED3->BSRRH = GPIO_PIN_LED3;
000020  01c1              LSLS     r1,r0,#7
000022  4a05              LDR      r2,|L4.56|
000024  8011              STRH     r1,[r2,#0]
000026  e004              B        |L4.50|
                  |L4.40|
;;;141    	}
;;;142    	else if (_no == 3)
000028  2803              CMP      r0,#3
00002a  d102              BNE      |L4.50|
;;;143    	{
;;;144    		GPIO_PORT_LED4->BSRRH = GPIO_PIN_LED4;
00002c  2104              MOVS     r1,#4
00002e  4a03              LDR      r2,|L4.60|
000030  8011              STRH     r1,[r2,#0]
                  |L4.50|
;;;145    	}
;;;146    }
000032  4770              BX       lr
;;;147    
                          ENDP

                  |L4.52|
                          DCD      0x40022000
                  |L4.56|
                          DCD      0x4002141a
                  |L4.60|
                          DCD      0x4002081a

                          AREA ||i.bsp_LedToggle||, CODE, READONLY, ALIGN=2

                  bsp_LedToggle PROC
;;;185    */
;;;186    void bsp_LedToggle(uint8_t _no)
000000  2801              CMP      r0,#1
;;;187    {
;;;188    	if (_no == 1)
000002  d106              BNE      |L5.18|
;;;189    	{
;;;190    		GPIO_PORT_LED1->ODR ^= GPIO_PIN_LED1;
000004  4910              LDR      r1,|L5.72|
000006  6949              LDR      r1,[r1,#0x14]
000008  f4816180          EOR      r1,r1,#0x400
00000c  4a0e              LDR      r2,|L5.72|
00000e  6151              STR      r1,[r2,#0x14]
000010  e019              B        |L5.70|
                  |L5.18|
;;;191    	}
;;;192    	else if (_no == 2)
000012  2802              CMP      r0,#2
000014  d106              BNE      |L5.36|
;;;193    	{
;;;194    		GPIO_PORT_LED2->ODR ^= GPIO_PIN_LED2;
000016  490d              LDR      r1,|L5.76|
000018  6809              LDR      r1,[r1,#0]
00001a  f0810180          EOR      r1,r1,#0x80
00001e  4a0b              LDR      r2,|L5.76|
000020  6011              STR      r1,[r2,#0]
000022  e010              B        |L5.70|
                  |L5.36|
;;;195    	}
;;;196    	else if (_no == 3)
000024  2803              CMP      r0,#3
000026  d106              BNE      |L5.54|
;;;197    	{
;;;198    		GPIO_PORT_LED3->ODR ^= GPIO_PIN_LED3;
000028  4908              LDR      r1,|L5.76|
00002a  6809              LDR      r1,[r1,#0]
00002c  f4817180          EOR      r1,r1,#0x100
000030  4a06              LDR      r2,|L5.76|
000032  6011              STR      r1,[r2,#0]
000034  e007              B        |L5.70|
                  |L5.54|
;;;199    	}
;;;200    	else if (_no == 4)
000036  2804              CMP      r0,#4
000038  d105              BNE      |L5.70|
;;;201    	{
;;;202    		GPIO_PORT_LED4->ODR ^= GPIO_PIN_LED4;
00003a  4905              LDR      r1,|L5.80|
00003c  6809              LDR      r1,[r1,#0]
00003e  f0810104          EOR      r1,r1,#4
000042  4a03              LDR      r2,|L5.80|
000044  6011              STR      r1,[r2,#0]
                  |L5.70|
;;;203    	}
;;;204    }
000046  4770              BX       lr
;;;205    
                          ENDP

                  |L5.72|
                          DCD      0x40022000
                  |L5.76|
                          DCD      0x40021414
                  |L5.80|
                          DCD      0x40020814

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp_stm32f4xx\\src\\bsp_led.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_led_c_ba23b041____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_bsp_led_c_ba23b041____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_led_c_ba23b041____REVSH|
#line 144
|__asm___9_bsp_led_c_ba23b041____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_led_c_ba23b041____RRX|
#line 300
|__asm___9_bsp_led_c_ba23b041____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
