; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\stm32f4xx_exti.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\stm32f4xx_exti.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\User\fonts -I..\..\emWin\GUI_X -I..\..\emWin\Config -I..\..\emWin\Include -I..\..\emWin\emWinTask -I..\..\uCOS-III\uC-CPU -I..\..\uCOS-III\uC-LIB -I..\..\uCOS-III\uCOS-III\Ports -I..\..\uCOS-III\uCOS-III\Source -I..\..\uCOS-III\uC-CPU\ARM-Cortex-M4\RealView -I..\..\uCOS-III\uC-LIB\Ports\ARM-Cortex-M4\RealView -I..\..\uCOS-III\uCOS-III\Ports\ARM-Cortex-M4\Generic\RealView -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\fatfs\src -I..\..\Libraries\CMSIS\Include -I..\..\User\control -I..\..\User\bsp_stm32f4xx\flash -I"F:\学习用具\2016毕业设计\V5-610_uCOS-III + emWin + FatFS\Project\MDK-ARM(uV4)\RTE" -I"E:\KEIL MDK5\ARM\PACK\Keil\STM32F4xx_DFP\2.6.0" -I"E:\KEIL MDK5\ARM\CMSIS\Include" -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F407xx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx --omf_browse=.\flash\obj\stm32f4xx_exti.crf ..\..\Libraries\STM32F4xx_StdPeriph_Driver\src\stm32f4xx_exti.c]
                          THUMB

                          AREA ||i.EXTI_ClearFlag||, CODE, READONLY, ALIGN=2

                  EXTI_ClearFlag PROC
;;;248      */
;;;249    void EXTI_ClearFlag(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L1.8|
;;;250    {
;;;251      /* Check the parameters */
;;;252      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;253      
;;;254      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;255    }
000004  4770              BX       lr
;;;256    
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      0x40013c14

                          AREA ||i.EXTI_ClearITPendingBit||, CODE, READONLY, ALIGN=2

                  EXTI_ClearITPendingBit PROC
;;;286      */
;;;287    void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L2.8|
;;;288    {
;;;289      /* Check the parameters */
;;;290      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;291      
;;;292      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;293    }
000004  4770              BX       lr
;;;294    
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      0x40013c14

                          AREA ||i.EXTI_DeInit||, CODE, READONLY, ALIGN=2

                  EXTI_DeInit PROC
;;;108      */
;;;109    void EXTI_DeInit(void)
000000  2000              MOVS     r0,#0
;;;110    {
;;;111      EXTI->IMR = 0x00000000;
000002  4906              LDR      r1,|L3.28|
000004  6008              STR      r0,[r1,#0]
;;;112      EXTI->EMR = 0x00000000;
000006  1d09              ADDS     r1,r1,#4
000008  6008              STR      r0,[r1,#0]
;;;113      EXTI->RTSR = 0x00000000;
00000a  1d09              ADDS     r1,r1,#4
00000c  6008              STR      r0,[r1,#0]
;;;114      EXTI->FTSR = 0x00000000;
00000e  1d09              ADDS     r1,r1,#4
000010  6008              STR      r0,[r1,#0]
;;;115      EXTI->PR = 0x007FFFFF;
000012  4803              LDR      r0,|L3.32|
000014  4901              LDR      r1,|L3.28|
000016  3114              ADDS     r1,r1,#0x14
000018  6008              STR      r0,[r1,#0]
;;;116    }
00001a  4770              BX       lr
;;;117    
                          ENDP

                  |L3.28|
                          DCD      0x40013c00
                  |L3.32|
                          DCD      0x007fffff

                          AREA ||i.EXTI_GenerateSWInterrupt||, CODE, READONLY, ALIGN=2

                  EXTI_GenerateSWInterrupt PROC
;;;195      */
;;;196    void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
000000  4902              LDR      r1,|L4.12|
;;;197    {
;;;198      /* Check the parameters */
;;;199      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;200      
;;;201      EXTI->SWIER |= EXTI_Line;
000002  6809              LDR      r1,[r1,#0]
000004  4301              ORRS     r1,r1,r0
000006  4a01              LDR      r2,|L4.12|
000008  6011              STR      r1,[r2,#0]
;;;202    }
00000a  4770              BX       lr
;;;203    
                          ENDP

                  |L4.12|
                          DCD      0x40013c10

                          AREA ||i.EXTI_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetFlagStatus PROC
;;;225      */
;;;226    FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)
000000  4601              MOV      r1,r0
;;;227    {
;;;228      FlagStatus bitstatus = RESET;
000002  2000              MOVS     r0,#0
;;;229      /* Check the parameters */
;;;230      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;231      
;;;232      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
000004  4a03              LDR      r2,|L5.20|
000006  6812              LDR      r2,[r2,#0]
000008  400a              ANDS     r2,r2,r1
00000a  b10a              CBZ      r2,|L5.16|
;;;233      {
;;;234        bitstatus = SET;
00000c  2001              MOVS     r0,#1
00000e  e000              B        |L5.18|
                  |L5.16|
;;;235      }
;;;236      else
;;;237      {
;;;238        bitstatus = RESET;
000010  2000              MOVS     r0,#0
                  |L5.18|
;;;239      }
;;;240      return bitstatus;
;;;241    }
000012  4770              BX       lr
;;;242    
                          ENDP

                  |L5.20|
                          DCD      0x40013c14

                          AREA ||i.EXTI_GetITStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetITStatus PROC
;;;262      */
;;;263    ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
000000  4601              MOV      r1,r0
;;;264    {
;;;265      FlagStatus bitstatus = RESET;
000002  2000              MOVS     r0,#0
;;;266      /* Check the parameters */
;;;267      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;268      
;;;269      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
000004  4a03              LDR      r2,|L6.20|
000006  6812              LDR      r2,[r2,#0]
000008  400a              ANDS     r2,r2,r1
00000a  b10a              CBZ      r2,|L6.16|
;;;270      {
;;;271        bitstatus = SET;
00000c  2001              MOVS     r0,#1
00000e  e000              B        |L6.18|
                  |L6.16|
;;;272      }
;;;273      else
;;;274      {
;;;275        bitstatus = RESET;
000010  2000              MOVS     r0,#0
                  |L6.18|
;;;276      }
;;;277      return bitstatus;
;;;278      
;;;279    }
000012  4770              BX       lr
;;;280    
                          ENDP

                  |L6.20|
                          DCD      0x40013c14

                          AREA ||i.EXTI_Init||, CODE, READONLY, ALIGN=2

                  EXTI_Init PROC
;;;124      */
;;;125    void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
000000  2100              MOVS     r1,#0
;;;126    {
;;;127      uint32_t tmp = 0;
;;;128    
;;;129      /* Check the parameters */
;;;130      assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
;;;131      assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
;;;132      assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
;;;133      assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
;;;134    
;;;135      tmp = (uint32_t)EXTI_BASE;
000002  4923              LDR      r1,|L7.144|
;;;136         
;;;137      if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
000004  7982              LDRB     r2,[r0,#6]
000006  2a00              CMP      r2,#0
000008  d03a              BEQ      |L7.128|
;;;138      {
;;;139        /* Clear EXTI line configuration */
;;;140        EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
00000a  460a              MOV      r2,r1
00000c  6812              LDR      r2,[r2,#0]
00000e  6803              LDR      r3,[r0,#0]
000010  439a              BICS     r2,r2,r3
000012  460b              MOV      r3,r1
000014  601a              STR      r2,[r3,#0]
;;;141        EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
000016  1d0a              ADDS     r2,r1,#4
000018  6812              LDR      r2,[r2,#0]
00001a  6803              LDR      r3,[r0,#0]
00001c  439a              BICS     r2,r2,r3
00001e  1d0b              ADDS     r3,r1,#4
000020  601a              STR      r2,[r3,#0]
;;;142        
;;;143        tmp += EXTI_InitStruct->EXTI_Mode;
000022  7902              LDRB     r2,[r0,#4]
000024  4411              ADD      r1,r1,r2
;;;144    
;;;145        *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
000026  680a              LDR      r2,[r1,#0]
000028  6803              LDR      r3,[r0,#0]
00002a  431a              ORRS     r2,r2,r3
00002c  600a              STR      r2,[r1,#0]
;;;146    
;;;147        /* Clear Rising Falling edge configuration */
;;;148        EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
00002e  4a18              LDR      r2,|L7.144|
000030  3208              ADDS     r2,r2,#8
000032  6812              LDR      r2,[r2,#0]
000034  6803              LDR      r3,[r0,#0]
000036  439a              BICS     r2,r2,r3
000038  4b15              LDR      r3,|L7.144|
00003a  3308              ADDS     r3,r3,#8
00003c  601a              STR      r2,[r3,#0]
;;;149        EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
00003e  1d1a              ADDS     r2,r3,#4
000040  6812              LDR      r2,[r2,#0]
000042  6803              LDR      r3,[r0,#0]
000044  439a              BICS     r2,r2,r3
000046  4b12              LDR      r3,|L7.144|
000048  330c              ADDS     r3,r3,#0xc
00004a  601a              STR      r2,[r3,#0]
;;;150        
;;;151        /* Select the trigger for the selected external interrupts */
;;;152        if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
00004c  7942              LDRB     r2,[r0,#5]
00004e  2a10              CMP      r2,#0x10
000050  d10e              BNE      |L7.112|
;;;153        {
;;;154          /* Rising Falling edge */
;;;155          EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
000052  1f1a              SUBS     r2,r3,#4
000054  6812              LDR      r2,[r2,#0]
000056  6803              LDR      r3,[r0,#0]
000058  431a              ORRS     r2,r2,r3
00005a  4b0d              LDR      r3,|L7.144|
00005c  3308              ADDS     r3,r3,#8
00005e  601a              STR      r2,[r3,#0]
;;;156          EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
000060  1d1a              ADDS     r2,r3,#4
000062  6812              LDR      r2,[r2,#0]
000064  6803              LDR      r3,[r0,#0]
000066  431a              ORRS     r2,r2,r3
000068  4b09              LDR      r3,|L7.144|
00006a  330c              ADDS     r3,r3,#0xc
00006c  601a              STR      r2,[r3,#0]
00006e  e00d              B        |L7.140|
                  |L7.112|
;;;157        }
;;;158        else
;;;159        {
;;;160          tmp = (uint32_t)EXTI_BASE;
000070  4907              LDR      r1,|L7.144|
;;;161          tmp += EXTI_InitStruct->EXTI_Trigger;
000072  7942              LDRB     r2,[r0,#5]
000074  4411              ADD      r1,r1,r2
;;;162    
;;;163          *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
000076  680a              LDR      r2,[r1,#0]
000078  6803              LDR      r3,[r0,#0]
00007a  431a              ORRS     r2,r2,r3
00007c  600a              STR      r2,[r1,#0]
00007e  e005              B        |L7.140|
                  |L7.128|
;;;164        }
;;;165      }
;;;166      else
;;;167      {
;;;168        tmp += EXTI_InitStruct->EXTI_Mode;
000080  7902              LDRB     r2,[r0,#4]
000082  4411              ADD      r1,r1,r2
;;;169    
;;;170        /* Disable the selected external lines */
;;;171        *(__IO uint32_t *) tmp &= ~EXTI_InitStruct->EXTI_Line;
000084  680a              LDR      r2,[r1,#0]
000086  6803              LDR      r3,[r0,#0]
000088  439a              BICS     r2,r2,r3
00008a  600a              STR      r2,[r1,#0]
                  |L7.140|
;;;172      }
;;;173    }
00008c  4770              BX       lr
;;;174    
                          ENDP

00008e  0000              DCW      0x0000
                  |L7.144|
                          DCD      0x40013c00

                          AREA ||i.EXTI_StructInit||, CODE, READONLY, ALIGN=1

                  EXTI_StructInit PROC
;;;180      */
;;;181    void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
000000  2100              MOVS     r1,#0
;;;182    {
;;;183      EXTI_InitStruct->EXTI_Line = EXTI_LINENONE;
000002  6001              STR      r1,[r0,#0]
;;;184      EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
000004  7101              STRB     r1,[r0,#4]
;;;185      EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
000006  210c              MOVS     r1,#0xc
000008  7141              STRB     r1,[r0,#5]
;;;186      EXTI_InitStruct->EXTI_LineCmd = DISABLE;
00000a  2100              MOVS     r1,#0
00000c  7181              STRB     r1,[r0,#6]
;;;187    }
00000e  4770              BX       lr
;;;188    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\Libraries\\STM32F4xx_StdPeriph_Driver\\src\\stm32f4xx_exti.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_exti_c_28b3b60e____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___16_stm32f4xx_exti_c_28b3b60e____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_exti_c_28b3b60e____REVSH|
#line 144
|__asm___16_stm32f4xx_exti_c_28b3b60e____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_exti_c_28b3b60e____RRX|
#line 300
|__asm___16_stm32f4xx_exti_c_28b3b60e____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
