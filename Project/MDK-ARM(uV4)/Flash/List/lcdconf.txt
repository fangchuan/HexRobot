; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\lcdconf.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\lcdconf.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\User\fonts -I..\..\emWin\GUI_X -I..\..\emWin\Config -I..\..\emWin\Include -I..\..\emWin\emWinTask -I..\..\uCOS-III\uC-CPU -I..\..\uCOS-III\uC-LIB -I..\..\uCOS-III\uCOS-III\Ports -I..\..\uCOS-III\uCOS-III\Source -I..\..\uCOS-III\uC-CPU\ARM-Cortex-M4\RealView -I..\..\uCOS-III\uC-LIB\Ports\ARM-Cortex-M4\RealView -I..\..\uCOS-III\uCOS-III\Ports\ARM-Cortex-M4\Generic\RealView -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\fatfs\src -I..\..\Libraries\CMSIS\Include -I..\..\User\control -I"F:\学习用具\2016毕业设计\V5-610_uCOS-III + emWin + FatFS\Project\MDK-ARM(uV4)\RTE" -I"E:\KEIL MDK5\ARM\PACK\Keil\STM32F4xx_DFP\2.6.0" -I"E:\KEIL MDK5\ARM\CMSIS\Include" -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F407xx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx --omf_browse=.\flash\obj\lcdconf.crf ..\..\emWin\Config\LCDConf.c]
                          THUMB

                          AREA ||i.LCD_X_Config||, CODE, READONLY, ALIGN=2

                  LCD_X_Config PROC
;;;122    */
;;;123    void LCD_X_Config(void) {
000000  b570              PUSH     {r4-r6,lr}
;;;124    	/* Set display driver and color conversion for 1st layer */
;;;125        GUI_DEVICE_CreateAndLink(DISPLAY_DRIVER, COLOR_CONVERSION, 0, 0);
000002  2300              MOVS     r3,#0
000004  461a              MOV      r2,r3
000006  490d              LDR      r1,|L1.60|
000008  480d              LDR      r0,|L1.64|
00000a  f7fffffe          BL       GUI_DEVICE_CreateAndLink
;;;126    
;;;127    	LCD_SetSizeEx    (0, LCD_GetWidth(), LCD_GetHeight());
00000e  f7fffffe          BL       LCD_GetHeight
000012  4604              MOV      r4,r0
000014  f7fffffe          BL       LCD_GetWidth
000018  4605              MOV      r5,r0
00001a  4622              MOV      r2,r4
00001c  4629              MOV      r1,r5
00001e  2000              MOVS     r0,#0
000020  f7fffffe          BL       LCD_SetSizeEx
;;;128    	LCD_SetVSizeEx   (0, LCD_GetWidth(), LCD_GetHeight());
000024  f7fffffe          BL       LCD_GetHeight
000028  4604              MOV      r4,r0
00002a  f7fffffe          BL       LCD_GetWidth
00002e  4605              MOV      r5,r0
000030  4622              MOV      r2,r4
000032  4629              MOV      r1,r5
000034  2000              MOVS     r0,#0
000036  f7fffffe          BL       LCD_SetVSizeEx
;;;129    }
00003a  bd70              POP      {r4-r6,pc}
;;;130    
                          ENDP

                  |L1.60|
                          DCD      LCD_API_ColorConv_M565
                  |L1.64|
                          DCD      GUIDRV_Template_API

                          AREA ||i.LCD_X_DisplayDriver||, CODE, READONLY, ALIGN=1

                  LCD_X_DisplayDriver PROC
;;;153    */
;;;154    int LCD_X_DisplayDriver(unsigned LayerIndex, unsigned Cmd, void * pData) 
000000  b510              PUSH     {r4,lr}
;;;155    {
000002  4603              MOV      r3,r0
000004  4614              MOV      r4,r2
;;;156    	int r;
;;;157    	switch (Cmd) 
000006  2904              CMP      r1,#4
000008  d016              BEQ      |L2.56|
00000a  dc06              BGT      |L2.26|
00000c  2901              CMP      r1,#1
00000e  d00b              BEQ      |L2.40|
000010  2902              CMP      r1,#2
000012  d00b              BEQ      |L2.44|
000014  2903              CMP      r1,#3
000016  d115              BNE      |L2.68|
000018  e00a              B        |L2.48|
                  |L2.26|
00001a  2905              CMP      r1,#5
00001c  d00e              BEQ      |L2.60|
00001e  2906              CMP      r1,#6
000020  d00e              BEQ      |L2.64|
000022  290e              CMP      r1,#0xe
000024  d10e              BNE      |L2.68|
000026  e005              B        |L2.52|
                  |L2.40|
;;;158    	{
;;;159    		case LCD_X_INITCONTROLLER: 
;;;160    		{
;;;161    			//
;;;162    			// Called during the initialization process in order to set up the
;;;163    			// display controller and put it into operation. If the display
;;;164    			// controller is not initialized by any external routine this needs
;;;165    			// to be adapted by the customer...
;;;166    			//
;;;167    			// ...
;;;168    			//  已经在前面初始化了，这里不再初始化
;;;169    			
;;;170    			return 0;
000028  2000              MOVS     r0,#0
                  |L2.42|
;;;171    		}
;;;172    		case LCD_X_SETVRAMADDR: 
;;;173    		{
;;;174    			//
;;;175    			// Required for setting the address of the video RAM for drivers
;;;176    			// with memory mapped video RAM which is passed in the 'pVRAM' element of p
;;;177    			//
;;;178    			//...
;;;179    			return 0;
;;;180    		}
;;;181    		case LCD_X_SETORG: 
;;;182    		{
;;;183    			//
;;;184    			// Required for setting the display origin which is passed in the 'xPos' and 'yPos' element of p
;;;185    			//
;;;186    
;;;187    			//...
;;;188    			return 0;
;;;189    		}
;;;190    		case LCD_X_SHOWBUFFER: 
;;;191    		{
;;;192    			//
;;;193    			// Required if multiple buffers are used. The 'Index' element of p contains the buffer index.
;;;194    			//
;;;195    			//...
;;;196    			return 0;
;;;197    		}
;;;198    		case LCD_X_SETLUTENTRY: 
;;;199    		{
;;;200    			//
;;;201    			// Required for setting a lookup table entry which is passed in the 'Pos' and 'Color' element of p
;;;202    			//
;;;203    			//...
;;;204    			return 0;
;;;205    		}
;;;206    		case LCD_X_ON: 
;;;207    		{
;;;208    			//
;;;209    			// Required if the display controller should support switching on and off
;;;210    			//
;;;211    			return 0;
;;;212    		}
;;;213    		case LCD_X_OFF: 
;;;214    		{
;;;215    			//
;;;216    			// Required if the display controller should support switching on and off
;;;217    			//
;;;218    			// ...
;;;219    			return 0;
;;;220    		}
;;;221    		default:
;;;222    		r = -1;
;;;223    	}
;;;224    	return r;
;;;225    }
00002a  bd10              POP      {r4,pc}
                  |L2.44|
00002c  2000              MOVS     r0,#0                 ;179
00002e  e7fc              B        |L2.42|
                  |L2.48|
000030  2000              MOVS     r0,#0                 ;188
000032  e7fa              B        |L2.42|
                  |L2.52|
000034  2000              MOVS     r0,#0                 ;196
000036  e7f8              B        |L2.42|
                  |L2.56|
000038  2000              MOVS     r0,#0                 ;204
00003a  e7f6              B        |L2.42|
                  |L2.60|
00003c  2000              MOVS     r0,#0                 ;211
00003e  e7f4              B        |L2.42|
                  |L2.64|
000040  2000              MOVS     r0,#0                 ;219
000042  e7f2              B        |L2.42|
                  |L2.68|
000044  f04f32ff          MOV      r2,#0xffffffff        ;222
000048  bf00              NOP                            ;157
00004a  bf00              NOP                            ;157
00004c  4610              MOV      r0,r2                 ;224
00004e  e7ec              B        |L2.42|
;;;226    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\emWin\\Config\\LCDConf.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_LCDConf_c_0a169049____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_LCDConf_c_0a169049____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_LCDConf_c_0a169049____REVSH|
#line 144
|__asm___9_LCDConf_c_0a169049____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___9_LCDConf_c_0a169049____RRX|
#line 300
|__asm___9_LCDConf_c_0a169049____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
