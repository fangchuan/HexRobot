; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\cpu_c.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\cpu_c.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\User\fonts -I..\..\emWin\GUI_X -I..\..\emWin\Config -I..\..\emWin\Include -I..\..\emWin\emWinTask -I..\..\uCOS-III\uC-CPU -I..\..\uCOS-III\uC-LIB -I..\..\uCOS-III\uCOS-III\Ports -I..\..\uCOS-III\uCOS-III\Source -I..\..\uCOS-III\uC-CPU\ARM-Cortex-M4\RealView -I..\..\uCOS-III\uC-LIB\Ports\ARM-Cortex-M4\RealView -I..\..\uCOS-III\uCOS-III\Ports\ARM-Cortex-M4\Generic\RealView -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\fatfs\src -I..\..\Libraries\CMSIS\Include -I..\..\User\control -I..\..\User\bsp_stm32f4xx\flash -I"F:\学习用具\2016毕业设计\V5-610_uCOS-III + emWin + FatFS\Project\MDK-ARM(uV4)\RTE" -I"E:\KEIL MDK5\ARM\PACK\Keil\STM32F4xx_DFP\2.6.0" -I"E:\KEIL MDK5\ARM\CMSIS\Include" -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F407xx -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx --omf_browse=.\flash\obj\cpu_c.crf ..\..\uCOS-III\uC-CPU\ARM-Cortex-M4\RealView\cpu_c.c]
                          THUMB

                          AREA ||i.CPU_BitBandClr||, CODE, READONLY, ALIGN=2

                  CPU_BitBandClr PROC
;;;133    
;;;134    void  CPU_BitBandClr (CPU_ADDR    addr,
000000  b510              PUSH     {r4,lr}
;;;135                          CPU_INT08U  bit_nbr)
;;;136    {
;;;137        CPU_ADDR  bit_word_off;
;;;138        CPU_ADDR  bit_word_addr;
;;;139    
;;;140    
;;;141        if ((addr >= CPU_BIT_BAND_SRAM_REG_LO) &&
000002  f1b05f00          CMP      r0,#0x20000000
000006  d30a              BCC      |L1.30|
;;;142            (addr <= CPU_BIT_BAND_SRAM_REG_HI)) {
000008  4c0c              LDR      r4,|L1.60|
00000a  42a0              CMP      r0,r4
00000c  d807              BHI      |L1.30|
;;;143            bit_word_off  = ((addr - CPU_BIT_BAND_SRAM_REG_LO  ) * 32) + (bit_nbr * 4);
00000e  0144              LSLS     r4,r0,#5
000010  eb040381          ADD      r3,r4,r1,LSL #2
;;;144            bit_word_addr = CPU_BIT_BAND_SRAM_BASE   + bit_word_off;
000014  f1035208          ADD      r2,r3,#0x22000000
;;;145    
;;;146          *(volatile CPU_INT32U *)(bit_word_addr) = 0;
000018  2400              MOVS     r4,#0
00001a  6014              STR      r4,[r2,#0]
00001c  e00c              B        |L1.56|
                  |L1.30|
;;;147    
;;;148        } else if ((addr >= CPU_BIT_BAND_PERIPH_REG_LO) &&
00001e  f1b04f80          CMP      r0,#0x40000000
000022  d309              BCC      |L1.56|
;;;149                   (addr <= CPU_BIT_BAND_PERIPH_REG_HI)) {
000024  4c06              LDR      r4,|L1.64|
000026  42a0              CMP      r0,r4
000028  d806              BHI      |L1.56|
;;;150            bit_word_off  = ((addr - CPU_BIT_BAND_PERIPH_REG_LO) * 32) + (bit_nbr * 4);
00002a  0144              LSLS     r4,r0,#5
00002c  eb040381          ADD      r3,r4,r1,LSL #2
;;;151            bit_word_addr = CPU_BIT_BAND_PERIPH_BASE + bit_word_off;
000030  f1034284          ADD      r2,r3,#0x42000000
;;;152    
;;;153          *(volatile CPU_INT32U *)(bit_word_addr) = 0;
000034  2400              MOVS     r4,#0
000036  6014              STR      r4,[r2,#0]
                  |L1.56|
;;;154        }
;;;155    }
000038  bd10              POP      {r4,pc}
;;;156    
                          ENDP

00003a  0000              DCW      0x0000
                  |L1.60|
                          DCD      0x200fffff
                  |L1.64|
                          DCD      0x400fffff

                          AREA ||i.CPU_BitBandSet||, CODE, READONLY, ALIGN=2

                  CPU_BitBandSet PROC
;;;176    
;;;177    void  CPU_BitBandSet (CPU_ADDR    addr,
000000  b510              PUSH     {r4,lr}
;;;178                          CPU_INT08U  bit_nbr)
;;;179    {
;;;180        CPU_ADDR  bit_word_off;
;;;181        CPU_ADDR  bit_word_addr;
;;;182    
;;;183    
;;;184        if ((addr >= CPU_BIT_BAND_SRAM_REG_LO) &&
000002  f1b05f00          CMP      r0,#0x20000000
000006  d30a              BCC      |L2.30|
;;;185            (addr <= CPU_BIT_BAND_SRAM_REG_HI)) {
000008  4c0c              LDR      r4,|L2.60|
00000a  42a0              CMP      r0,r4
00000c  d807              BHI      |L2.30|
;;;186            bit_word_off  = ((addr - CPU_BIT_BAND_SRAM_REG_LO  ) * 32) + (bit_nbr * 4);
00000e  0144              LSLS     r4,r0,#5
000010  eb040381          ADD      r3,r4,r1,LSL #2
;;;187            bit_word_addr = CPU_BIT_BAND_SRAM_BASE   + bit_word_off;
000014  f1035208          ADD      r2,r3,#0x22000000
;;;188    
;;;189          *(volatile CPU_INT32U *)(bit_word_addr) = 1;
000018  2401              MOVS     r4,#1
00001a  6014              STR      r4,[r2,#0]
00001c  e00c              B        |L2.56|
                  |L2.30|
;;;190    
;;;191        } else if ((addr >= CPU_BIT_BAND_PERIPH_REG_LO) &&
00001e  f1b04f80          CMP      r0,#0x40000000
000022  d309              BCC      |L2.56|
;;;192                   (addr <= CPU_BIT_BAND_PERIPH_REG_HI)) {
000024  4c06              LDR      r4,|L2.64|
000026  42a0              CMP      r0,r4
000028  d806              BHI      |L2.56|
;;;193            bit_word_off  = ((addr - CPU_BIT_BAND_PERIPH_REG_LO) * 32) + (bit_nbr * 4);
00002a  0144              LSLS     r4,r0,#5
00002c  eb040381          ADD      r3,r4,r1,LSL #2
;;;194            bit_word_addr = CPU_BIT_BAND_PERIPH_BASE + bit_word_off;
000030  f1034284          ADD      r2,r3,#0x42000000
;;;195    
;;;196          *(volatile CPU_INT32U *)(bit_word_addr) = 1;
000034  2401              MOVS     r4,#1
000036  6014              STR      r4,[r2,#0]
                  |L2.56|
;;;197        }
;;;198    }
000038  bd10              POP      {r4,pc}
;;;199    
                          ENDP

00003a  0000              DCW      0x0000
                  |L2.60|
                          DCD      0x200fffff
                  |L2.64|
                          DCD      0x400fffff

                          AREA ||i.CPU_IntSrcDis||, CODE, READONLY, ALIGN=2

                  CPU_IntSrcDis PROC
;;;250    /*$PAGE*/
;;;251    void  CPU_IntSrcDis (CPU_INT08U  pos)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;252    {
000004  4604              MOV      r4,r0
;;;253        CPU_INT08U  group;
;;;254        CPU_INT08U  pos_max;
;;;255        CPU_INT08U  nbr;
;;;256        CPU_SR_ALLOC();
000006  f04f0800          MOV      r8,#0
;;;257    
;;;258    
;;;259        switch (pos) {
00000a  2c10              CMP      r4,#0x10
00000c  d26b              BCS      |L3.230|
00000e  e8dff004          TBB      [pc,r4]
000012  080e              DCB      0x08,0x0e
000014  0f101429          DCB      0x0f,0x10,0x14,0x29
000018  3e090a0b          DCB      0x3e,0x09,0x0a,0x0b
00001c  0c11120d          DCB      0x0c,0x11,0x12,0x0d
000020  1353              DCB      0x13,0x53
;;;260            case CPU_INT_STK_PTR:                                   /* ---------------- INVALID OR RESERVED --------------- */
;;;261            case CPU_INT_RSVD_07:
000022  bf00              NOP      
;;;262            case CPU_INT_RSVD_08:
000024  bf00              NOP      
;;;263            case CPU_INT_RSVD_09:
000026  bf00              NOP      
;;;264            case CPU_INT_RSVD_10:
000028  bf00              NOP      
;;;265            case CPU_INT_RSVD_13:
00002a  bf00              NOP      
;;;266                 break;
00002c  e089              B        |L3.322|
;;;267    
;;;268    
;;;269                                                                    /* ----------------- SYSTEM EXCEPTIONS ---------------- */
;;;270            case CPU_INT_RESET:                                     /* Reset (see Note #2).                                 */
;;;271            case CPU_INT_NMI:                                       /* Non-maskable interrupt (see Note #2).                */
00002e  bf00              NOP      
;;;272            case CPU_INT_HFAULT:                                    /* Hard fault (see Note #2).                            */
000030  bf00              NOP      
;;;273            case CPU_INT_SVCALL:                                    /* SVCall (see Note #2).                                */
000032  bf00              NOP      
;;;274            case CPU_INT_DBGMON:                                    /* Debug monitor (see Note #2).                         */
000034  bf00              NOP      
;;;275            case CPU_INT_PENDSV:                                    /* PendSV (see Note #2).                                */
000036  bf00              NOP      
;;;276                 break;
000038  e083              B        |L3.322|
;;;277    
;;;278            case CPU_INT_MEM:                                       /* Memory management.                                   */
;;;279                 CPU_CRITICAL_ENTER();
00003a  bf00              NOP      
00003c  bf00              NOP      
00003e  f7fffffe          BL       CPU_SR_Save
000042  4680              MOV      r8,r0
000044  bf00              NOP      
000046  bf00              NOP      
;;;280                 CPU_REG_NVIC_SHCSR &= ~CPU_REG_NVIC_SHCSR_MEMFAULTENA;
000048  483f              LDR      r0,|L3.328|
00004a  6800              LDR      r0,[r0,#0]
00004c  f4203080          BIC      r0,r0,#0x10000
000050  493d              LDR      r1,|L3.328|
000052  6008              STR      r0,[r1,#0]
;;;281                 CPU_CRITICAL_EXIT();
000054  bf00              NOP      
000056  bf00              NOP      
000058  4640              MOV      r0,r8
00005a  f7fffffe          BL       CPU_SR_Restore
00005e  bf00              NOP      
000060  bf00              NOP      
;;;282                 break;
000062  e06e              B        |L3.322|
;;;283    
;;;284            case CPU_INT_BUSFAULT:                                  /* Bus fault.                                           */
;;;285                 CPU_CRITICAL_ENTER();
000064  bf00              NOP      
000066  bf00              NOP      
000068  f7fffffe          BL       CPU_SR_Save
00006c  4680              MOV      r8,r0
00006e  bf00              NOP      
000070  bf00              NOP      
;;;286                 CPU_REG_NVIC_SHCSR &= ~CPU_REG_NVIC_SHCSR_BUSFAULTENA;
000072  4835              LDR      r0,|L3.328|
000074  6800              LDR      r0,[r0,#0]
000076  f4203000          BIC      r0,r0,#0x20000
00007a  4933              LDR      r1,|L3.328|
00007c  6008              STR      r0,[r1,#0]
;;;287                 CPU_CRITICAL_EXIT();
00007e  bf00              NOP      
000080  bf00              NOP      
000082  4640              MOV      r0,r8
000084  f7fffffe          BL       CPU_SR_Restore
000088  bf00              NOP      
00008a  bf00              NOP      
;;;288                 break;
00008c  e059              B        |L3.322|
;;;289    
;;;290            case CPU_INT_USAGEFAULT:                                /* Usage fault.                                         */
;;;291                 CPU_CRITICAL_ENTER();
00008e  bf00              NOP      
000090  bf00              NOP      
000092  f7fffffe          BL       CPU_SR_Save
000096  4680              MOV      r8,r0
000098  bf00              NOP      
00009a  bf00              NOP      
;;;292                 CPU_REG_NVIC_SHCSR &= ~CPU_REG_NVIC_SHCSR_USGFAULTENA;
00009c  482a              LDR      r0,|L3.328|
00009e  6800              LDR      r0,[r0,#0]
0000a0  f4202080          BIC      r0,r0,#0x40000
0000a4  4928              LDR      r1,|L3.328|
0000a6  6008              STR      r0,[r1,#0]
;;;293                 CPU_CRITICAL_EXIT();
0000a8  bf00              NOP      
0000aa  bf00              NOP      
0000ac  4640              MOV      r0,r8
0000ae  f7fffffe          BL       CPU_SR_Restore
0000b2  bf00              NOP      
0000b4  bf00              NOP      
;;;294                 break;
0000b6  e044              B        |L3.322|
;;;295    
;;;296            case CPU_INT_SYSTICK:                                   /* SysTick.                                             */
;;;297                 CPU_CRITICAL_ENTER();
0000b8  bf00              NOP      
0000ba  bf00              NOP      
0000bc  f7fffffe          BL       CPU_SR_Save
0000c0  4680              MOV      r8,r0
0000c2  bf00              NOP      
0000c4  bf00              NOP      
;;;298                 CPU_REG_NVIC_ST_CTRL &= ~CPU_REG_NVIC_ST_CTRL_ENABLE;
0000c6  f04f20e0          MOV      r0,#0xe000e000
0000ca  6900              LDR      r0,[r0,#0x10]
0000cc  f0200001          BIC      r0,r0,#1
0000d0  f04f21e0          MOV      r1,#0xe000e000
0000d4  6108              STR      r0,[r1,#0x10]
;;;299                 CPU_CRITICAL_EXIT();
0000d6  bf00              NOP      
0000d8  bf00              NOP      
0000da  4640              MOV      r0,r8
0000dc  f7fffffe          BL       CPU_SR_Restore
0000e0  bf00              NOP      
0000e2  bf00              NOP      
;;;300                 break;
0000e4  e02d              B        |L3.322|
                  |L3.230|
;;;301    
;;;302    
;;;303                                                                    /* ---------------- EXTERNAL INTERRUPT ---------------- */
;;;304            default:
;;;305                pos_max = CPU_INT_SRC_POS_MAX;
0000e6  f04f20e0          MOV      r0,#0xe000e000
0000ea  6840              LDR      r0,[r0,#4]
0000ec  1c40              ADDS     r0,r0,#1
0000ee  2110              MOVS     r1,#0x10
0000f0  eb011040          ADD      r0,r1,r0,LSL #5
0000f4  b2c6              UXTB     r6,r0
;;;306                if (pos < pos_max) {                                /* See Note #3.                                         */
0000f6  42b4              CMP      r4,r6
0000f8  da22              BGE      |L3.320|
;;;307                     group = (pos - 16) / 32;
0000fa  f1a40010          SUB      r0,r4,#0x10
0000fe  17c1              ASRS     r1,r0,#31
000100  eb0061d1          ADD      r1,r0,r1,LSR #27
000104  f3c11547          UBFX     r5,r1,#5,#8
;;;308                     nbr   = (pos - 16) % 32;
000108  17c1              ASRS     r1,r0,#31
00010a  eb0061d1          ADD      r1,r0,r1,LSR #27
00010e  1149              ASRS     r1,r1,#5
000110  eba01141          SUB      r1,r0,r1,LSL #5
000114  b2cf              UXTB     r7,r1
;;;309    
;;;310                     CPU_CRITICAL_ENTER();
000116  bf00              NOP      
000118  bf00              NOP      
00011a  f7fffffe          BL       CPU_SR_Save
00011e  4680              MOV      r8,r0
000120  bf00              NOP      
000122  bf00              NOP      
;;;311                     CPU_REG_NVIC_CLREN(group) = DEF_BIT(nbr);
000124  2001              MOVS     r0,#1
000126  40b8              LSLS     r0,r0,r7
000128  00a9              LSLS     r1,r5,#2
00012a  f10121e0          ADD      r1,r1,#0xe000e000
00012e  f8c10180          STR      r0,[r1,#0x180]
;;;312                     CPU_CRITICAL_EXIT();
000132  bf00              NOP      
000134  bf00              NOP      
000136  4640              MOV      r0,r8
000138  f7fffffe          BL       CPU_SR_Restore
00013c  bf00              NOP      
00013e  bf00              NOP      
                  |L3.320|
;;;313                 }
;;;314                 break;
000140  bf00              NOP      
                  |L3.322|
000142  bf00              NOP                            ;266
;;;315        }
;;;316    }
000144  e8bd81f0          POP      {r4-r8,pc}
;;;317    
                          ENDP

                  |L3.328|
                          DCD      0xe000ed24

                          AREA ||i.CPU_IntSrcEn||, CODE, READONLY, ALIGN=2

                  CPU_IntSrcEn PROC
;;;339    
;;;340    void  CPU_IntSrcEn (CPU_INT08U  pos)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;341    {
000004  4604              MOV      r4,r0
;;;342        CPU_INT08U  group;
;;;343        CPU_INT08U  nbr;
;;;344        CPU_INT08U  pos_max;
;;;345        CPU_SR_ALLOC();
000006  f04f0800          MOV      r8,#0
;;;346    
;;;347    
;;;348        switch (pos) {
00000a  2c10              CMP      r4,#0x10
00000c  d26b              BCS      |L4.230|
00000e  e8dff004          TBB      [pc,r4]
000012  080e              DCB      0x08,0x0e
000014  0f101429          DCB      0x0f,0x10,0x14,0x29
000018  3e090a0b          DCB      0x3e,0x09,0x0a,0x0b
00001c  0c11120d          DCB      0x0c,0x11,0x12,0x0d
000020  1353              DCB      0x13,0x53
;;;349            case CPU_INT_STK_PTR:                                   /* ---------------- INVALID OR RESERVED --------------- */
;;;350            case CPU_INT_RSVD_07:
000022  bf00              NOP      
;;;351            case CPU_INT_RSVD_08:
000024  bf00              NOP      
;;;352            case CPU_INT_RSVD_09:
000026  bf00              NOP      
;;;353            case CPU_INT_RSVD_10:
000028  bf00              NOP      
;;;354            case CPU_INT_RSVD_13:
00002a  bf00              NOP      
;;;355                 break;
00002c  e089              B        |L4.322|
;;;356    
;;;357    
;;;358                                                                    /* ----------------- SYSTEM EXCEPTIONS ---------------- */
;;;359            case CPU_INT_RESET:                                     /* Reset (see Note #2).                                 */
;;;360            case CPU_INT_NMI:                                       /* Non-maskable interrupt (see Note #2).                */
00002e  bf00              NOP      
;;;361            case CPU_INT_HFAULT:                                    /* Hard fault (see Note #2).                            */
000030  bf00              NOP      
;;;362            case CPU_INT_SVCALL:                                    /* SVCall (see Note #2).                                */
000032  bf00              NOP      
;;;363            case CPU_INT_DBGMON:                                    /* Debug monitor (see Note #2).                         */
000034  bf00              NOP      
;;;364            case CPU_INT_PENDSV:                                    /* PendSV (see Note #2).                                */
000036  bf00              NOP      
;;;365                 break;
000038  e083              B        |L4.322|
;;;366    
;;;367            case CPU_INT_MEM:                                       /* Memory management.                                   */
;;;368                 CPU_CRITICAL_ENTER();
00003a  bf00              NOP      
00003c  bf00              NOP      
00003e  f7fffffe          BL       CPU_SR_Save
000042  4680              MOV      r8,r0
000044  bf00              NOP      
000046  bf00              NOP      
;;;369                 CPU_REG_NVIC_SHCSR |= CPU_REG_NVIC_SHCSR_MEMFAULTENA;
000048  483f              LDR      r0,|L4.328|
00004a  6800              LDR      r0,[r0,#0]
00004c  f4403080          ORR      r0,r0,#0x10000
000050  493d              LDR      r1,|L4.328|
000052  6008              STR      r0,[r1,#0]
;;;370                 CPU_CRITICAL_EXIT();
000054  bf00              NOP      
000056  bf00              NOP      
000058  4640              MOV      r0,r8
00005a  f7fffffe          BL       CPU_SR_Restore
00005e  bf00              NOP      
000060  bf00              NOP      
;;;371                 break;
000062  e06e              B        |L4.322|
;;;372    
;;;373            case CPU_INT_BUSFAULT:                                  /* Bus fault.                                           */
;;;374                 CPU_CRITICAL_ENTER();
000064  bf00              NOP      
000066  bf00              NOP      
000068  f7fffffe          BL       CPU_SR_Save
00006c  4680              MOV      r8,r0
00006e  bf00              NOP      
000070  bf00              NOP      
;;;375                 CPU_REG_NVIC_SHCSR |= CPU_REG_NVIC_SHCSR_BUSFAULTENA;
000072  4835              LDR      r0,|L4.328|
000074  6800              LDR      r0,[r0,#0]
000076  f4403000          ORR      r0,r0,#0x20000
00007a  4933              LDR      r1,|L4.328|
00007c  6008              STR      r0,[r1,#0]
;;;376                 CPU_CRITICAL_EXIT();
00007e  bf00              NOP      
000080  bf00              NOP      
000082  4640              MOV      r0,r8
000084  f7fffffe          BL       CPU_SR_Restore
000088  bf00              NOP      
00008a  bf00              NOP      
;;;377                 break;
00008c  e059              B        |L4.322|
;;;378    
;;;379            case CPU_INT_USAGEFAULT:                                /* Usage fault.                                         */
;;;380                 CPU_CRITICAL_ENTER();
00008e  bf00              NOP      
000090  bf00              NOP      
000092  f7fffffe          BL       CPU_SR_Save
000096  4680              MOV      r8,r0
000098  bf00              NOP      
00009a  bf00              NOP      
;;;381                 CPU_REG_NVIC_SHCSR |= CPU_REG_NVIC_SHCSR_USGFAULTENA;
00009c  482a              LDR      r0,|L4.328|
00009e  6800              LDR      r0,[r0,#0]
0000a0  f4402080          ORR      r0,r0,#0x40000
0000a4  4928              LDR      r1,|L4.328|
0000a6  6008              STR      r0,[r1,#0]
;;;382                 CPU_CRITICAL_EXIT();
0000a8  bf00              NOP      
0000aa  bf00              NOP      
0000ac  4640              MOV      r0,r8
0000ae  f7fffffe          BL       CPU_SR_Restore
0000b2  bf00              NOP      
0000b4  bf00              NOP      
;;;383                 break;
0000b6  e044              B        |L4.322|
;;;384    
;;;385            case CPU_INT_SYSTICK:                                   /* SysTick.                                             */
;;;386                 CPU_CRITICAL_ENTER();
0000b8  bf00              NOP      
0000ba  bf00              NOP      
0000bc  f7fffffe          BL       CPU_SR_Save
0000c0  4680              MOV      r8,r0
0000c2  bf00              NOP      
0000c4  bf00              NOP      
;;;387                 CPU_REG_NVIC_ST_CTRL |= CPU_REG_NVIC_ST_CTRL_ENABLE;
0000c6  f04f20e0          MOV      r0,#0xe000e000
0000ca  6900              LDR      r0,[r0,#0x10]
0000cc  f0400001          ORR      r0,r0,#1
0000d0  f04f21e0          MOV      r1,#0xe000e000
0000d4  6108              STR      r0,[r1,#0x10]
;;;388                 CPU_CRITICAL_EXIT();
0000d6  bf00              NOP      
0000d8  bf00              NOP      
0000da  4640              MOV      r0,r8
0000dc  f7fffffe          BL       CPU_SR_Restore
0000e0  bf00              NOP      
0000e2  bf00              NOP      
;;;389                 break;
0000e4  e02d              B        |L4.322|
                  |L4.230|
;;;390    
;;;391    
;;;392                                                                    /* ---------------- EXTERNAL INTERRUPT ---------------- */
;;;393            default:
;;;394                pos_max = CPU_INT_SRC_POS_MAX;
0000e6  f04f20e0          MOV      r0,#0xe000e000
0000ea  6840              LDR      r0,[r0,#4]
0000ec  1c40              ADDS     r0,r0,#1
0000ee  2110              MOVS     r1,#0x10
0000f0  eb011040          ADD      r0,r1,r0,LSL #5
0000f4  b2c7              UXTB     r7,r0
;;;395                if (pos < pos_max) {                                /* See Note #3.                                         */
0000f6  42bc              CMP      r4,r7
0000f8  da22              BGE      |L4.320|
;;;396                     group = (pos - 16) / 32;
0000fa  f1a40010          SUB      r0,r4,#0x10
0000fe  17c1              ASRS     r1,r0,#31
000100  eb0061d1          ADD      r1,r0,r1,LSR #27
000104  f3c11547          UBFX     r5,r1,#5,#8
;;;397                     nbr   = (pos - 16) % 32;
000108  17c1              ASRS     r1,r0,#31
00010a  eb0061d1          ADD      r1,r0,r1,LSR #27
00010e  1149              ASRS     r1,r1,#5
000110  eba01141          SUB      r1,r0,r1,LSL #5
000114  b2ce              UXTB     r6,r1
;;;398    
;;;399                     CPU_CRITICAL_ENTER();
000116  bf00              NOP      
000118  bf00              NOP      
00011a  f7fffffe          BL       CPU_SR_Save
00011e  4680              MOV      r8,r0
000120  bf00              NOP      
000122  bf00              NOP      
;;;400                     CPU_REG_NVIC_SETEN(group) = DEF_BIT(nbr);
000124  2001              MOVS     r0,#1
000126  40b0              LSLS     r0,r0,r6
000128  00a9              LSLS     r1,r5,#2
00012a  f10121e0          ADD      r1,r1,#0xe000e000
00012e  f8c10100          STR      r0,[r1,#0x100]
;;;401                     CPU_CRITICAL_EXIT();
000132  bf00              NOP      
000134  bf00              NOP      
000136  4640              MOV      r0,r8
000138  f7fffffe          BL       CPU_SR_Restore
00013c  bf00              NOP      
00013e  bf00              NOP      
                  |L4.320|
;;;402                 }
;;;403                 break;
000140  bf00              NOP      
                  |L4.322|
000142  bf00              NOP                            ;355
;;;404        }
;;;405    }
000144  e8bd81f0          POP      {r4-r8,pc}
;;;406    
                          ENDP

                  |L4.328|
                          DCD      0xe000ed24

                          AREA ||i.CPU_IntSrcPendClr||, CODE, READONLY, ALIGN=1

                  CPU_IntSrcPendClr PROC
;;;438    
;;;439    void  CPU_IntSrcPendClr (CPU_INT08U  pos)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;440    
;;;441    {
000004  4604              MOV      r4,r0
;;;442        CPU_INT08U  group;
;;;443        CPU_INT08U  nbr;
;;;444        CPU_INT08U  pos_max;
;;;445        CPU_SR_ALLOC();
000006  f04f0800          MOV      r8,#0
;;;446    
;;;447    
;;;448        switch (pos) {
00000a  2c10              CMP      r4,#0x10
00000c  d219              BCS      |L5.66|
00000e  e8dff004          TBB      [pc,r4]
000012  080e              DCB      0x08,0x0e
000014  0f101115          DCB      0x0f,0x10,0x11,0x15
000018  16090a0b          DCB      0x16,0x09,0x0a,0x0b
00001c  0c12130d          DCB      0x0c,0x12,0x13,0x0d
000020  1417              DCB      0x14,0x17
;;;449            case CPU_INT_STK_PTR:                                   /* ---------------- INVALID OR RESERVED --------------- */
;;;450            case CPU_INT_RSVD_07:
000022  bf00              NOP      
;;;451            case CPU_INT_RSVD_08:
000024  bf00              NOP      
;;;452            case CPU_INT_RSVD_09:
000026  bf00              NOP      
;;;453            case CPU_INT_RSVD_10:
000028  bf00              NOP      
;;;454            case CPU_INT_RSVD_13:
00002a  bf00              NOP      
;;;455                 break;
00002c  e037              B        |L5.158|
;;;456                                                                    /* ----------------- SYSTEM EXCEPTIONS ---------------- */
;;;457            case CPU_INT_RESET:                                     /* Reset (see Note #2).                                 */
;;;458            case CPU_INT_NMI:                                       /* Non-maskable interrupt (see Note #2).                */
00002e  bf00              NOP      
;;;459            case CPU_INT_HFAULT:                                    /* Hard fault (see Note #2).                            */
000030  bf00              NOP      
;;;460            case CPU_INT_MEM:                                       /* Memory management (see Note #2).                     */
000032  bf00              NOP      
;;;461            case CPU_INT_SVCALL:                                    /* SVCall (see Note #2).                                */
000034  bf00              NOP      
;;;462            case CPU_INT_DBGMON:                                    /* Debug monitor (see Note #2).                         */
000036  bf00              NOP      
;;;463            case CPU_INT_PENDSV:                                    /* PendSV (see Note #2).                                */
000038  bf00              NOP      
;;;464            case CPU_INT_BUSFAULT:                                  /* Bus fault.                                           */
00003a  bf00              NOP      
;;;465            case CPU_INT_USAGEFAULT:                                /* Usage fault.                                         */
00003c  bf00              NOP      
;;;466            case CPU_INT_SYSTICK:                                   /* SysTick.                                             */
00003e  bf00              NOP      
;;;467                 break;
000040  e02d              B        |L5.158|
                  |L5.66|
;;;468                                                                    /* ---------------- EXTERNAL INTERRUPT ---------------- */
;;;469            default:
;;;470                pos_max = CPU_INT_SRC_POS_MAX;
000042  f04f20e0          MOV      r0,#0xe000e000
000046  6840              LDR      r0,[r0,#4]
000048  1c40              ADDS     r0,r0,#1
00004a  2110              MOVS     r1,#0x10
00004c  eb011040          ADD      r0,r1,r0,LSL #5
000050  b2c7              UXTB     r7,r0
;;;471                if (pos < pos_max) {                                /* See Note #3.                                         */
000052  42bc              CMP      r4,r7
000054  da22              BGE      |L5.156|
;;;472                     group = (pos - 16) / 32;
000056  f1a40010          SUB      r0,r4,#0x10
00005a  17c1              ASRS     r1,r0,#31
00005c  eb0061d1          ADD      r1,r0,r1,LSR #27
000060  f3c11547          UBFX     r5,r1,#5,#8
;;;473                     nbr   = (pos - 16) % 32;
000064  17c1              ASRS     r1,r0,#31
000066  eb0061d1          ADD      r1,r0,r1,LSR #27
00006a  1149              ASRS     r1,r1,#5
00006c  eba01141          SUB      r1,r0,r1,LSL #5
000070  b2ce              UXTB     r6,r1
;;;474    
;;;475                     CPU_CRITICAL_ENTER();
000072  bf00              NOP      
000074  bf00              NOP      
000076  f7fffffe          BL       CPU_SR_Save
00007a  4680              MOV      r8,r0
00007c  bf00              NOP      
00007e  bf00              NOP      
;;;476                     CPU_REG_NVIC_CLRPEND(group) = DEF_BIT(nbr);
000080  2001              MOVS     r0,#1
000082  40b0              LSLS     r0,r0,r6
000084  00a9              LSLS     r1,r5,#2
000086  f10121e0          ADD      r1,r1,#0xe000e000
00008a  f8c10280          STR      r0,[r1,#0x280]
;;;477                     CPU_CRITICAL_EXIT();
00008e  bf00              NOP      
000090  bf00              NOP      
000092  4640              MOV      r0,r8
000094  f7fffffe          BL       CPU_SR_Restore
000098  bf00              NOP      
00009a  bf00              NOP      
                  |L5.156|
;;;478                 }
;;;479                 break;
00009c  bf00              NOP      
                  |L5.158|
00009e  bf00              NOP                            ;455
;;;480        }
;;;481    }
0000a0  e8bd81f0          POP      {r4-r8,pc}
;;;482    
                          ENDP


                          AREA ||i.CPU_IntSrcPrioGet||, CODE, READONLY, ALIGN=2

                  CPU_IntSrcPrioGet PROC
;;;645    
;;;646    CPU_INT16S  CPU_IntSrcPrioGet (CPU_INT08U  pos)
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;647    {
000004  4606              MOV      r6,r0
;;;648        CPU_INT08U  group;
;;;649        CPU_INT08U  nbr;
;;;650        CPU_INT08U  pos_max;
;;;651        CPU_INT16S  prio;
;;;652        CPU_INT32U  prio_32;
;;;653        CPU_INT32U  temp;
;;;654        CPU_SR_ALLOC();
000006  f04f0b00          MOV      r11,#0
;;;655    
;;;656    
;;;657        switch (pos) {
00000a  2e10              CMP      r6,#0x10
00000c  d270              BCS      |L6.240|
00000e  e8dff006          TBB      [pc,r6]
000012  080f              DCB      0x08,0x0f
000014  1215182a          DCB      0x12,0x15,0x18,0x2a
000018  3d090a0b          DCB      0x3d,0x09,0x0a,0x0b
00001c  0c495c0d          DCB      0x0c,0x49,0x5c,0x0d
000020  7084              DCB      0x70,0x84
;;;658            case CPU_INT_STK_PTR:                                   /* ---------------- INVALID OR RESERVED --------------- */
;;;659            case CPU_INT_RSVD_07:
000022  bf00              NOP      
;;;660            case CPU_INT_RSVD_08:
000024  bf00              NOP      
;;;661            case CPU_INT_RSVD_09:
000026  bf00              NOP      
;;;662            case CPU_INT_RSVD_10:
000028  bf00              NOP      
;;;663            case CPU_INT_RSVD_13:
00002a  bf00              NOP      
;;;664                 prio = DEF_INT_16S_MIN_VAL;
00002c  4c65              LDR      r4,|L6.452|
;;;665                 break;
00002e  e0bd              B        |L6.428|
;;;666    
;;;667    
;;;668                                                                    /* ----------------- SYSTEM EXCEPTIONS ---------------- */
;;;669            case CPU_INT_RESET:                                     /* Reset (see Note #2).                                 */
;;;670                 prio = -3;
000030  f06f0402          MVN      r4,#2
;;;671                 break;
000034  e0ba              B        |L6.428|
;;;672    
;;;673            case CPU_INT_NMI:                                       /* Non-maskable interrupt (see Note #2).                */
;;;674                 prio = -2;
000036  f06f0401          MVN      r4,#1
;;;675                 break;
00003a  e0b7              B        |L6.428|
;;;676    
;;;677            case CPU_INT_HFAULT:                                    /* Hard fault (see Note #2).                            */
;;;678                 prio = -1;
00003c  f04f34ff          MOV      r4,#0xffffffff
;;;679                 break;
000040  e0b4              B        |L6.428|
;;;680    
;;;681    
;;;682            case CPU_INT_MEM:                                       /* Memory management.                                   */
;;;683                 CPU_CRITICAL_ENTER();
000042  bf00              NOP      
000044  bf00              NOP      
000046  f7fffffe          BL       CPU_SR_Save
00004a  4683              MOV      r11,r0
00004c  bf00              NOP      
00004e  bf00              NOP      
;;;684                 temp = CPU_REG_NVIC_SHPRI1;
000050  485d              LDR      r0,|L6.456|
000052  6805              LDR      r5,[r0,#0]
;;;685                 prio = (temp >> (0 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
000054  b2ec              UXTB     r4,r5
;;;686                 CPU_CRITICAL_EXIT();
000056  bf00              NOP      
000058  bf00              NOP      
00005a  4658              MOV      r0,r11
00005c  f7fffffe          BL       CPU_SR_Restore
000060  bf00              NOP      
000062  bf00              NOP      
;;;687                 break;
000064  e0a2              B        |L6.428|
;;;688    
;;;689    
;;;690            case CPU_INT_BUSFAULT:                                  /* Bus fault.                                           */
;;;691                 CPU_CRITICAL_ENTER();
000066  bf00              NOP      
000068  bf00              NOP      
00006a  f7fffffe          BL       CPU_SR_Save
00006e  4683              MOV      r11,r0
000070  bf00              NOP      
000072  bf00              NOP      
;;;692                 temp = CPU_REG_NVIC_SHPRI1;
000074  4854              LDR      r0,|L6.456|
000076  6805              LDR      r5,[r0,#0]
;;;693                 prio = (temp >> (1 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
000078  f3c52407          UBFX     r4,r5,#8,#8
;;;694                 CPU_CRITICAL_EXIT();
00007c  bf00              NOP      
00007e  bf00              NOP      
000080  4658              MOV      r0,r11
000082  f7fffffe          BL       CPU_SR_Restore
000086  bf00              NOP      
000088  bf00              NOP      
;;;695                 break;
00008a  e08f              B        |L6.428|
;;;696    
;;;697    
;;;698            case CPU_INT_USAGEFAULT:                                /* Usage fault.                                         */
;;;699                 CPU_CRITICAL_ENTER();
00008c  bf00              NOP      
00008e  bf00              NOP      
000090  f7fffffe          BL       CPU_SR_Save
000094  4683              MOV      r11,r0
000096  bf00              NOP      
000098  bf00              NOP      
;;;700                 temp = CPU_REG_NVIC_SHPRI1;
00009a  484b              LDR      r0,|L6.456|
00009c  6805              LDR      r5,[r0,#0]
;;;701                 prio = (temp >> (2 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
00009e  f3c54407          UBFX     r4,r5,#16,#8
;;;702                 break;
0000a2  e083              B        |L6.428|
;;;703    
;;;704            case CPU_INT_SVCALL:                                    /* SVCall.                                              */
;;;705                 CPU_CRITICAL_ENTER();
0000a4  bf00              NOP      
0000a6  bf00              NOP      
0000a8  f7fffffe          BL       CPU_SR_Save
0000ac  4683              MOV      r11,r0
0000ae  bf00              NOP      
0000b0  bf00              NOP      
;;;706                 temp = CPU_REG_NVIC_SHPRI2;
0000b2  4845              LDR      r0,|L6.456|
0000b4  1d00              ADDS     r0,r0,#4
0000b6  6805              LDR      r5,[r0,#0]
;;;707                 prio = (temp >> (3 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
0000b8  0e2c              LSRS     r4,r5,#24
;;;708                 CPU_CRITICAL_EXIT();
0000ba  bf00              NOP      
0000bc  bf00              NOP      
0000be  4658              MOV      r0,r11
0000c0  f7fffffe          BL       CPU_SR_Restore
0000c4  bf00              NOP      
0000c6  bf00              NOP      
;;;709                 break;
0000c8  e070              B        |L6.428|
;;;710    
;;;711            case CPU_INT_DBGMON:                                    /* Debug monitor.                                       */
;;;712                 CPU_CRITICAL_ENTER();
0000ca  bf00              NOP      
0000cc  bf00              NOP      
0000ce  f7fffffe          BL       CPU_SR_Save
0000d2  4683              MOV      r11,r0
0000d4  bf00              NOP      
0000d6  bf00              NOP      
;;;713                 temp = CPU_REG_NVIC_SHPRI3;
0000d8  483b              LDR      r0,|L6.456|
0000da  3008              ADDS     r0,r0,#8
0000dc  6805              LDR      r5,[r0,#0]
;;;714                 prio = (temp >> (0 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
0000de  b2ec              UXTB     r4,r5
;;;715                 CPU_CRITICAL_EXIT();
0000e0  bf00              NOP      
0000e2  bf00              NOP      
0000e4  4658              MOV      r0,r11
0000e6  f7fffffe          BL       CPU_SR_Restore
0000ea  bf00              NOP      
0000ec  bf00              NOP      
;;;716                 break;
0000ee  e05d              B        |L6.428|
                  |L6.240|
0000f0  e026              B        |L6.320|
;;;717    
;;;718            case CPU_INT_PENDSV:                                    /* PendSV.                                              */
;;;719                 CPU_CRITICAL_ENTER();
0000f2  bf00              NOP      
0000f4  bf00              NOP      
0000f6  f7fffffe          BL       CPU_SR_Save
0000fa  4683              MOV      r11,r0
0000fc  bf00              NOP      
0000fe  bf00              NOP      
;;;720                 temp = CPU_REG_NVIC_SHPRI3;
000100  4831              LDR      r0,|L6.456|
000102  3008              ADDS     r0,r0,#8
000104  6805              LDR      r5,[r0,#0]
;;;721                 prio = (temp >> (2 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
000106  f3c54407          UBFX     r4,r5,#16,#8
;;;722                 CPU_CRITICAL_EXIT();
00010a  bf00              NOP      
00010c  bf00              NOP      
00010e  4658              MOV      r0,r11
000110  f7fffffe          BL       CPU_SR_Restore
000114  bf00              NOP      
000116  bf00              NOP      
;;;723                 break;
000118  e048              B        |L6.428|
;;;724    
;;;725            case CPU_INT_SYSTICK:                                   /* SysTick.                                             */
;;;726                 CPU_CRITICAL_ENTER();
00011a  bf00              NOP      
00011c  bf00              NOP      
00011e  f7fffffe          BL       CPU_SR_Save
000122  4683              MOV      r11,r0
000124  bf00              NOP      
000126  bf00              NOP      
;;;727                 temp = CPU_REG_NVIC_SHPRI3;
000128  4827              LDR      r0,|L6.456|
00012a  3008              ADDS     r0,r0,#8
00012c  6805              LDR      r5,[r0,#0]
;;;728                 prio = (temp >> (3 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
00012e  0e2c              LSRS     r4,r5,#24
;;;729                 CPU_CRITICAL_EXIT();
000130  bf00              NOP      
000132  bf00              NOP      
000134  4658              MOV      r0,r11
000136  f7fffffe          BL       CPU_SR_Restore
00013a  bf00              NOP      
00013c  bf00              NOP      
;;;730                 break;
00013e  e035              B        |L6.428|
                  |L6.320|
;;;731    
;;;732    
;;;733                                                                    /* ---------------- EXTERNAL INTERRUPT ---------------- */
;;;734            default:
;;;735                pos_max = CPU_INT_SRC_POS_MAX;
000140  f04f20e0          MOV      r0,#0xe000e000
000144  6840              LDR      r0,[r0,#4]
000146  1c40              ADDS     r0,r0,#1
000148  2110              MOVS     r1,#0x10
00014a  eb011040          ADD      r0,r1,r0,LSL #5
00014e  f0000aff          AND      r10,r0,#0xff
;;;736                if (pos < pos_max) {                                /* See Note #3.                                         */
000152  4556              CMP      r6,r10
000154  da28              BGE      |L6.424|
;;;737                     group = (pos - 16) / 4;
000156  f1a60010          SUB      r0,r6,#0x10
00015a  17c1              ASRS     r1,r0,#31
00015c  eb007191          ADD      r1,r0,r1,LSR #30
000160  f3c10887          UBFX     r8,r1,#2,#8
;;;738                     nbr   = (pos - 16) % 4;
000164  17c1              ASRS     r1,r0,#31
000166  eb007191          ADD      r1,r0,r1,LSR #30
00016a  1089              ASRS     r1,r1,#2
00016c  eba00181          SUB      r1,r0,r1,LSL #2
000170  f00109ff          AND      r9,r1,#0xff
;;;739    
;;;740                     CPU_CRITICAL_ENTER();
000174  bf00              NOP      
000176  bf00              NOP      
000178  f7fffffe          BL       CPU_SR_Save
00017c  4683              MOV      r11,r0
00017e  bf00              NOP      
000180  bf00              NOP      
;;;741                     temp  = CPU_REG_NVIC_PRIO(group);
000182  ea4f0088          LSL      r0,r8,#2
000186  f10020e0          ADD      r0,r0,#0xe000e000
00018a  f8d05400          LDR      r5,[r0,#0x400]
;;;742                     CPU_CRITICAL_EXIT();
00018e  bf00              NOP      
000190  bf00              NOP      
000192  4658              MOV      r0,r11
000194  f7fffffe          BL       CPU_SR_Restore
000198  bf00              NOP      
00019a  bf00              NOP      
;;;743    
;;;744                     prio  = (temp >> (nbr * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
00019c  ea4f00c9          LSL      r0,r9,#3
0001a0  fa25f000          LSR      r0,r5,r0
0001a4  b2c4              UXTB     r4,r0
0001a6  e000              B        |L6.426|
                  |L6.424|
;;;745                 } else {
;;;746                     prio  = DEF_INT_16S_MIN_VAL;
0001a8  4c06              LDR      r4,|L6.452|
                  |L6.426|
;;;747                 }
;;;748                 break;
0001aa  bf00              NOP      
                  |L6.428|
0001ac  bf00              NOP                            ;665
;;;749        }
;;;750    
;;;751        if (prio >= 0) {
0001ae  2c00              CMP      r4,#0
0001b0  db04              BLT      |L6.444|
;;;752            prio_32 = CPU_RevBits((CPU_INT32U)prio);
0001b2  4620              MOV      r0,r4
0001b4  f7fffffe          BL       CPU_RevBits
0001b8  4607              MOV      r7,r0
;;;753            prio    = (CPU_INT16S)(prio_32 >> (3 * DEF_OCTET_NBR_BITS));
0001ba  0e3c              LSRS     r4,r7,#24
                  |L6.444|
;;;754        }
;;;755    
;;;756        return (prio);
0001bc  4620              MOV      r0,r4
;;;757    }
0001be  e8bd9ff0          POP      {r4-r12,pc}
;;;758    
                          ENDP

0001c2  0000              DCW      0x0000
                  |L6.452|
                          DCD      0xffff8000
                  |L6.456|
                          DCD      0xe000ed18

                          AREA ||i.CPU_IntSrcPrioSet||, CODE, READONLY, ALIGN=2

                  CPU_IntSrcPrioSet PROC
;;;510    
;;;511    void  CPU_IntSrcPrioSet (CPU_INT08U  pos,
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;512                             CPU_INT08U  prio)
;;;513    {
000004  4606              MOV      r6,r0
000006  460d              MOV      r5,r1
;;;514        CPU_INT08U  group;
;;;515        CPU_INT08U  nbr;
;;;516        CPU_INT08U  pos_max;
;;;517        CPU_INT32U  prio_32;
;;;518        CPU_INT32U  temp;
;;;519        CPU_SR_ALLOC();
000008  f04f0b00          MOV      r11,#0
;;;520    
;;;521    
;;;522        prio_32 = CPU_RevBits((CPU_INT08U)prio);
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       CPU_RevBits
000012  4682              MOV      r10,r0
;;;523        prio    = (CPU_INT08U)(prio_32 >> (3 * DEF_OCTET_NBR_BITS));
000014  ea4f651a          LSR      r5,r10,#24
;;;524    
;;;525        switch (pos) {
000018  2e10              CMP      r6,#0x10
00001a  d27c              BCS      |L7.278|
00001c  e8dff006          TBB      [pc,r6]
000020  080e0f10          DCB      0x08,0x0e,0x0f,0x10
000024  11263c09          DCB      0x11,0x26,0x3c,0x09
000028  0a0b0c52          DCB      0x0a,0x0b,0x0c,0x52
00002c  690d8198          DCB      0x69,0x0d,0x81,0x98
;;;526            case CPU_INT_STK_PTR:                                   /* ---------------- INVALID OR RESERVED --------------- */
;;;527            case CPU_INT_RSVD_07:
000030  bf00              NOP      
;;;528            case CPU_INT_RSVD_08:
000032  bf00              NOP      
;;;529            case CPU_INT_RSVD_09:
000034  bf00              NOP      
;;;530            case CPU_INT_RSVD_10:
000036  bf00              NOP      
;;;531            case CPU_INT_RSVD_13:
000038  bf00              NOP      
;;;532                 break;
00003a  e0dd              B        |L7.504|
;;;533    
;;;534    
;;;535                                                                    /* ----------------- SYSTEM EXCEPTIONS ---------------- */
;;;536            case CPU_INT_RESET:                                     /* Reset (see Note #2).                                 */
;;;537            case CPU_INT_NMI:                                       /* Non-maskable interrupt (see Note #2).                */
00003c  bf00              NOP      
;;;538            case CPU_INT_HFAULT:                                    /* Hard fault (see Note #2).                            */
00003e  bf00              NOP      
;;;539                 break;
000040  e0da              B        |L7.504|
;;;540    
;;;541            case CPU_INT_MEM:                                       /* Memory management.                                   */
;;;542                 CPU_CRITICAL_ENTER();
000042  bf00              NOP      
000044  bf00              NOP      
000046  f7fffffe          BL       CPU_SR_Save
00004a  4683              MOV      r11,r0
00004c  bf00              NOP      
00004e  bf00              NOP      
;;;543                 temp                 = CPU_REG_NVIC_SHPRI1;
000050  486b              LDR      r0,|L7.512|
000052  6804              LDR      r4,[r0,#0]
;;;544                 temp                &= ~(DEF_OCTET_MASK << (0 * DEF_OCTET_NBR_BITS));
000054  f02404ff          BIC      r4,r4,#0xff
;;;545                 temp                |=  (prio           << (0 * DEF_OCTET_NBR_BITS));
000058  432c              ORRS     r4,r4,r5
;;;546                 CPU_REG_NVIC_SHPRI1  = temp;
00005a  6004              STR      r4,[r0,#0]
;;;547                 CPU_CRITICAL_EXIT();
00005c  bf00              NOP      
00005e  bf00              NOP      
000060  4658              MOV      r0,r11
000062  f7fffffe          BL       CPU_SR_Restore
000066  bf00              NOP      
000068  bf00              NOP      
;;;548                 break;
00006a  e0c5              B        |L7.504|
;;;549    
;;;550            case CPU_INT_BUSFAULT:                                  /* Bus fault.                                           */
;;;551                 CPU_CRITICAL_ENTER();
00006c  bf00              NOP      
00006e  bf00              NOP      
000070  f7fffffe          BL       CPU_SR_Save
000074  4683              MOV      r11,r0
000076  bf00              NOP      
000078  bf00              NOP      
;;;552                 temp                 = CPU_REG_NVIC_SHPRI1;
00007a  4861              LDR      r0,|L7.512|
00007c  6804              LDR      r4,[r0,#0]
;;;553                 temp                &= ~(DEF_OCTET_MASK << (1 * DEF_OCTET_NBR_BITS));
00007e  f424447f          BIC      r4,r4,#0xff00
;;;554                 temp                |=  (prio           << (1 * DEF_OCTET_NBR_BITS));
000082  ea442405          ORR      r4,r4,r5,LSL #8
;;;555                 CPU_REG_NVIC_SHPRI1  = temp;
000086  6004              STR      r4,[r0,#0]
;;;556                 CPU_CRITICAL_EXIT();
000088  bf00              NOP      
00008a  bf00              NOP      
00008c  4658              MOV      r0,r11
00008e  f7fffffe          BL       CPU_SR_Restore
000092  bf00              NOP      
000094  bf00              NOP      
;;;557                 break;
000096  e0af              B        |L7.504|
;;;558    
;;;559            case CPU_INT_USAGEFAULT:                                /* Usage fault.                                         */
;;;560                 CPU_CRITICAL_ENTER();
000098  bf00              NOP      
00009a  bf00              NOP      
00009c  f7fffffe          BL       CPU_SR_Save
0000a0  4683              MOV      r11,r0
0000a2  bf00              NOP      
0000a4  bf00              NOP      
;;;561                 temp                 = CPU_REG_NVIC_SHPRI1;
0000a6  4856              LDR      r0,|L7.512|
0000a8  6804              LDR      r4,[r0,#0]
;;;562                 temp                &= ~(DEF_OCTET_MASK << (2 * DEF_OCTET_NBR_BITS));
0000aa  f424047f          BIC      r4,r4,#0xff0000
;;;563                 temp                |=  (prio           << (2 * DEF_OCTET_NBR_BITS));
0000ae  ea444405          ORR      r4,r4,r5,LSL #16
;;;564                 CPU_REG_NVIC_SHPRI1  = temp;
0000b2  6004              STR      r4,[r0,#0]
;;;565                 CPU_CRITICAL_EXIT();
0000b4  bf00              NOP      
0000b6  bf00              NOP      
0000b8  4658              MOV      r0,r11
0000ba  f7fffffe          BL       CPU_SR_Restore
0000be  bf00              NOP      
0000c0  bf00              NOP      
;;;566                 break;
0000c2  e099              B        |L7.504|
;;;567    
;;;568            case CPU_INT_SVCALL:                                    /* SVCall.                                              */
;;;569                 CPU_CRITICAL_ENTER();
0000c4  bf00              NOP      
0000c6  bf00              NOP      
0000c8  f7fffffe          BL       CPU_SR_Save
0000cc  4683              MOV      r11,r0
0000ce  bf00              NOP      
0000d0  bf00              NOP      
;;;570                 temp                 = CPU_REG_NVIC_SHPRI2;
0000d2  484b              LDR      r0,|L7.512|
0000d4  1d00              ADDS     r0,r0,#4
0000d6  6804              LDR      r4,[r0,#0]
;;;571                 temp                &= ~((CPU_INT32U)DEF_OCTET_MASK << (3 * DEF_OCTET_NBR_BITS));
0000d8  f024447f          BIC      r4,r4,#0xff000000
;;;572                 temp                |=  (prio                       << (3 * DEF_OCTET_NBR_BITS));
0000dc  ea446405          ORR      r4,r4,r5,LSL #24
;;;573                 CPU_REG_NVIC_SHPRI2  = temp;
0000e0  6004              STR      r4,[r0,#0]
;;;574                 CPU_CRITICAL_EXIT();
0000e2  bf00              NOP      
0000e4  bf00              NOP      
0000e6  4658              MOV      r0,r11
0000e8  f7fffffe          BL       CPU_SR_Restore
0000ec  bf00              NOP      
0000ee  bf00              NOP      
;;;575                 break;
0000f0  e082              B        |L7.504|
;;;576    
;;;577            case CPU_INT_DBGMON:                                    /* Debug monitor.                                       */
;;;578                 CPU_CRITICAL_ENTER();
0000f2  bf00              NOP      
0000f4  bf00              NOP      
0000f6  f7fffffe          BL       CPU_SR_Save
0000fa  4683              MOV      r11,r0
0000fc  bf00              NOP      
0000fe  bf00              NOP      
;;;579                 temp                = CPU_REG_NVIC_SHPRI3;
000100  483f              LDR      r0,|L7.512|
000102  3008              ADDS     r0,r0,#8
000104  6804              LDR      r4,[r0,#0]
;;;580                 temp                &= ~(DEF_OCTET_MASK << (0 * DEF_OCTET_NBR_BITS));
000106  f02404ff          BIC      r4,r4,#0xff
;;;581                 temp                |=  (prio           << (0 * DEF_OCTET_NBR_BITS));
00010a  432c              ORRS     r4,r4,r5
;;;582                 CPU_REG_NVIC_SHPRI3  = temp;
00010c  6004              STR      r4,[r0,#0]
;;;583                 CPU_CRITICAL_EXIT();
00010e  bf00              NOP      
000110  bf00              NOP      
000112  4658              MOV      r0,r11
000114  e000              B        |L7.280|
                  |L7.278|
000116  e032              B        |L7.382|
                  |L7.280|
000118  f7fffffe          BL       CPU_SR_Restore
00011c  bf00              NOP      
00011e  bf00              NOP      
;;;584                 break;
000120  e06a              B        |L7.504|
;;;585    
;;;586            case CPU_INT_PENDSV:                                    /* PendSV.                                              */
;;;587                 CPU_CRITICAL_ENTER();
000122  bf00              NOP      
000124  bf00              NOP      
000126  f7fffffe          BL       CPU_SR_Save
00012a  4683              MOV      r11,r0
00012c  bf00              NOP      
00012e  bf00              NOP      
;;;588                 temp                 = CPU_REG_NVIC_SHPRI3;
000130  4833              LDR      r0,|L7.512|
000132  3008              ADDS     r0,r0,#8
000134  6804              LDR      r4,[r0,#0]
;;;589                 temp                &= ~(DEF_OCTET_MASK << (2 * DEF_OCTET_NBR_BITS));
000136  f424047f          BIC      r4,r4,#0xff0000
;;;590                 temp                |=  (prio           << (2 * DEF_OCTET_NBR_BITS));
00013a  ea444405          ORR      r4,r4,r5,LSL #16
;;;591                 CPU_REG_NVIC_SHPRI3  = temp;
00013e  6004              STR      r4,[r0,#0]
;;;592                 CPU_CRITICAL_EXIT();
000140  bf00              NOP      
000142  bf00              NOP      
000144  4658              MOV      r0,r11
000146  f7fffffe          BL       CPU_SR_Restore
00014a  bf00              NOP      
00014c  bf00              NOP      
;;;593                 break;
00014e  e053              B        |L7.504|
;;;594    
;;;595            case CPU_INT_SYSTICK:                                   /* SysTick.                                             */
;;;596                 CPU_CRITICAL_ENTER();
000150  bf00              NOP      
000152  bf00              NOP      
000154  f7fffffe          BL       CPU_SR_Save
000158  4683              MOV      r11,r0
00015a  bf00              NOP      
00015c  bf00              NOP      
;;;597                 temp                 = CPU_REG_NVIC_SHPRI3;
00015e  4828              LDR      r0,|L7.512|
000160  3008              ADDS     r0,r0,#8
000162  6804              LDR      r4,[r0,#0]
;;;598                 temp                &= ~((CPU_INT32U)DEF_OCTET_MASK << (3 * DEF_OCTET_NBR_BITS));
000164  f024447f          BIC      r4,r4,#0xff000000
;;;599                 temp                |=  (prio                       << (3 * DEF_OCTET_NBR_BITS));
000168  ea446405          ORR      r4,r4,r5,LSL #24
;;;600                 CPU_REG_NVIC_SHPRI3  = temp;
00016c  6004              STR      r4,[r0,#0]
;;;601                 CPU_CRITICAL_EXIT();
00016e  bf00              NOP      
000170  bf00              NOP      
000172  4658              MOV      r0,r11
000174  f7fffffe          BL       CPU_SR_Restore
000178  bf00              NOP      
00017a  bf00              NOP      
;;;602                 break;
00017c  e03c              B        |L7.504|
                  |L7.382|
;;;603    
;;;604    
;;;605                                                                    /* ---------------- EXTERNAL INTERRUPT ---------------- */
;;;606            default:
;;;607                pos_max = CPU_INT_SRC_POS_MAX;
00017e  f04f20e0          MOV      r0,#0xe000e000
000182  6840              LDR      r0,[r0,#4]
000184  1c40              ADDS     r0,r0,#1
000186  2110              MOVS     r1,#0x10
000188  eb011040          ADD      r0,r1,r0,LSL #5
00018c  f00009ff          AND      r9,r0,#0xff
;;;608                if (pos < pos_max) {                                /* See Note #3.                                         */
000190  454e              CMP      r6,r9
000192  da30              BGE      |L7.502|
;;;609                     group                    = (pos - 16) / 4;
000194  f1a60010          SUB      r0,r6,#0x10
000198  17c1              ASRS     r1,r0,#31
00019a  eb007191          ADD      r1,r0,r1,LSR #30
00019e  f3c10787          UBFX     r7,r1,#2,#8
;;;610                     nbr                      = (pos - 16) % 4;
0001a2  17c1              ASRS     r1,r0,#31
0001a4  eb007191          ADD      r1,r0,r1,LSR #30
0001a8  1089              ASRS     r1,r1,#2
0001aa  eba00181          SUB      r1,r0,r1,LSL #2
0001ae  f00108ff          AND      r8,r1,#0xff
;;;611    
;;;612                     CPU_CRITICAL_ENTER();
0001b2  bf00              NOP      
0001b4  bf00              NOP      
0001b6  f7fffffe          BL       CPU_SR_Save
0001ba  4683              MOV      r11,r0
0001bc  bf00              NOP      
0001be  bf00              NOP      
;;;613                     temp                     = CPU_REG_NVIC_PRIO(group);
0001c0  00b8              LSLS     r0,r7,#2
0001c2  f10020e0          ADD      r0,r0,#0xe000e000
0001c6  f8d04400          LDR      r4,[r0,#0x400]
;;;614                     temp                    &= ~(DEF_OCTET_MASK << (nbr * DEF_OCTET_NBR_BITS));
0001ca  ea4f01c8          LSL      r1,r8,#3
0001ce  20ff              MOVS     r0,#0xff
0001d0  4088              LSLS     r0,r0,r1
0001d2  4384              BICS     r4,r4,r0
;;;615                     temp                    |=  (prio           << (nbr * DEF_OCTET_NBR_BITS));
0001d4  ea4f01c8          LSL      r1,r8,#3
0001d8  fa05f001          LSL      r0,r5,r1
0001dc  4304              ORRS     r4,r4,r0
;;;616                     CPU_REG_NVIC_PRIO(group) = temp;
0001de  00b8              LSLS     r0,r7,#2
0001e0  f10020e0          ADD      r0,r0,#0xe000e000
0001e4  f8c04400          STR      r4,[r0,#0x400]
;;;617                     CPU_CRITICAL_EXIT();
0001e8  bf00              NOP      
0001ea  bf00              NOP      
0001ec  4658              MOV      r0,r11
0001ee  f7fffffe          BL       CPU_SR_Restore
0001f2  bf00              NOP      
0001f4  bf00              NOP      
                  |L7.502|
;;;618                 }
;;;619                 break;
0001f6  bf00              NOP      
                  |L7.504|
0001f8  bf00              NOP                            ;532
;;;620        }
;;;621    }
0001fa  e8bd9ff0          POP      {r4-r12,pc}
;;;622    
                          ENDP

0001fe  0000              DCW      0x0000
                  |L7.512|
                          DCD      0xe000ed18
